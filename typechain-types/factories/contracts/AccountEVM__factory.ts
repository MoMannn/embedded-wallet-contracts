/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AccountEVM,
  AccountEVMInterface,
} from "../../contracts/AccountEVM";

const _abi = [
  {
    inputs: [],
    name: "DER_Split_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "expmod_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "k256Decompress_Invalid_Length_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "k256DeriveY_Invalid_Prefix_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "recoverV_Error",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "addressToBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_b",
        type: "bytes32",
      },
    ],
    name: "bytes32ToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
    ],
    name: "call",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "createWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "exportPrivateKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWalletList",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialController",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "modifyController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "removeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
    ],
    name: "sign",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "v",
            type: "uint256",
          },
        ],
        internalType: "struct SignatureRSV",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "gasPrice",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "gasLimit",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct EIP155Signer.EthTx",
        name: "txToSign",
        type: "tuple",
      },
    ],
    name: "signEIP155",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
    ],
    name: "staticcall",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "walletAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461002357600160ff196000541617600055611e6390816100298239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8063089b8fae146101075780631b8b921d146101025780631d647605146100fd578063260558a0146100f85780632cc0b254146100f357806337022e98146100ee5780635ced058e146100e95780637d1f3b6f146100e457806382c947b7146100df57806388196f68146100da578063a9059cbb146100d5578063b429afeb146100d0578063d04731d4146100cb578063e341eaa4146100c65763fc9ffe02146100c157600080fd5b610883565b61078c565b6106e0565b6106a1565b610634565b6105b4565b610588565b6104ff565b6104d8565b61046f565b6103cd565b610384565b610335565b6102c3565b610168565b60005b83811061011f5750506000910152565b818101518382015260200161010f565b906020916101488151809281855285808601910161010c565b601f01601f1916010190565b90602061016592818152019061012f565b90565b346102385760031960403682011261023857600435602435916001600160401b0383116102385760e0908336030112610238573360005260016020526101ba600160ff60406000205416151514610914565b60025481106101c8816109fb565b156102335761022f91610223916002600052600080516020611e0e8339815191520154906101f7821515610a51565b816000526003602052610214604060002054913690600401610b4f565b916001600160a01b0316610caf565b60405191829182610154565b0390f35b610a3b565b600080fd5b600435906001600160a01b038216820361023857565b35906001600160a01b038216820361023857565b6040600319820112610238576004356001600160a01b038116810361023857916024356001600160401b039283821161023857806023830112156102385781600401359384116102385760248483010111610238576024019190565b34610238576102d136610267565b9160009283809333825260016020526102f5600160ff604085205416151514610914565b826040519384928337810182815203925af161030f610ac4565b901561032d5761022f9060405191829160208352602083019061012f565b602081519101fd5b3461023857602036600319011261023857336000526001602052610365600160ff60406000205416151514610914565b60206103726004356119ef565b6040516001600160a01b039091168152f35b346102385760008061039536610267565b9033845260016020526103b3600160ff604087205416151514610914565b816040519283928337810184815203915afa61030f610ac4565b34610238576040366003190112610238576103e661023d565b60ff600054166104355760018060a01b031660005260016020526104156040600020600160ff19825416179055565b6104206024356119ef565b50610433600160ff196000541617600055565b005b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e525b9a5d1a585b1a5e995960721b6044820152606490fd5b346102385760403660031901126102385761048861023d565b6024358015158091036102385760009133835260016020526104b5600160ff604086205416151514610914565b60018060a01b031682526001602052604082209060ff8019835416911617905580f35b34610238576020366003190112610238576040516004356001600160a01b03168152602090f35b3461023857602036600319011261023857600435336000526001602052610532600160ff60406000205416151514610914565b6002548110610540816109fb565b15610233576002600052600080516020611e0e8339815191520154610566811515610a51565b600052600360205261022f604060002054604051918291829190602083019252565b346102385760203660031901126102385760206001600160a01b036105ab61023d565b16604051908152f35b34610238576020366003190112610238576004353360005260016020526105e7600160ff60406000205416151514610914565b60025481106105f5816109fb565b156102335761022f906002600052600080516020611e0e833981519152015461061f811515610a51565b60026000526040519081529081906020820190565b346102385760403660031901126102385761064d61023d565b6024359060008080809481943383526001602052610676600160ff604086205416151514610914565b82908215610697575b6001600160a01b031690f1156106925780f35b610a8e565b6108fc915061067f565b34610238576020366003190112610238576001600160a01b036106c261023d565b166000526001602052602060ff604060002054166040519015158152f35b34610238576020366003190112610238576004356000903382526001602052610714600160ff604085205416151514610914565b6002548110610722816109fb565b15610233576002825280600080516020611e0e833981519152019081549061074b821515610a51565b818452600360205283604081205560025411156102335760028352908290556001600160a01b03166000908152600160205260409020805460ff1916905580f35b34610238576040366003190112610238576004356107a8610fb1565b503360005260016020526107c8600160ff60406000205416151514610914565b60025481106107d6816109fb565b156102335761082461022f916002600052600080516020611e0e8339815191520154610803811515610a51565b600081815260036020526040902054602435916001600160a01b0316610fe7565b60408051825181526020808401519082015291810151908201529081906060820190565b6020908160408183019282815285518094520193019160005b82811061086f575050505090565b835185529381019392810192600101610861565b34610238576000806003193601126109115733815260016020918183526108b48260ff604084205416151514610914565b60405191828460025491828152019460028452600080516020611e0e83398151915293905b8282106108fc5761022f866108f0818a03826109da565b60405191829182610848565b845487529586019593830193908301906108d9565b80fd5b1561091b57565b60405162461bcd60e51b815260206004820152601060248201526f27b7363ca13ca1b7b73a3937b63632b960811b6044820152606490fd5b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761098457604052565b610953565b60e081019081106001600160401b0382111761098457604052565b604081019081106001600160401b0382111761098457604052565b602081019081106001600160401b0382111761098457604052565b90601f801991011681019081106001600160401b0382111761098457604052565b15610a0257565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081dd85b1b195d081a59607a1b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b15610a5857565b60405162461bcd60e51b815260206004820152600e60248201526d15d85b1b195d081c995b5bdd995960921b6044820152606490fd5b6040513d6000823e3d90fd5b60405190610aa782610989565b565b6001600160401b03811161098457601f01601f191660200190565b3d15610aef573d90610ad582610aa9565b91610ae360405193846109da565b82523d6000602084013e565b606090565b35906001600160401b038216820361023857565b81601f8201121561023857803590610b1f82610aa9565b92610b2d60405194856109da565b8284526020838301011161023857816000926020809301838601378301015290565b919060e08382031261023857610b63610a9a565b92610b6d81610af4565b845260208101356020850152610b8560408201610af4565b6040850152610b9660608201610253565b60608501526080810135608085015260a08101356001600160401b0381116102385760c092610bc6918301610b08565b60a0850152013560c0830152565b634e487b7160e01b600052601160045260246000fd5b600019810191908211610bf957565b610bd4565b6020039060208211610bf957565b6401000003d01990810391908211610bf957565b91908203918211610bf957565b600381901b91906001600160fd1b03811603610bf957565b908160081b918083046101001490151715610bf957565b9060238201809211610bf957565b6004019081600411610bf957565b9060018201809211610bf957565b9060048201809211610bf957565b9060028201809211610bf957565b91908201809211610bf957565b610d1f90929192610cbe610fb1565b5060c0830193610cec855160405190610cd682610969565b6000825260006020830152604082015285610e4a565b604051610d1660208281610d09818301968781519384920161010c565b81010380845201826109da565b51902091610fe7565b9060408201805193601a198501948511610bf957518060011b9080820460021490151715610bf957610d57610d5c9161016596610ca2565b610c5c565b9052610e4a565b6040519061014082018281106001600160401b0382111761098457604052600982528160005b6101208110610d96575050565b806060602080938501015201610d89565b8051156102335760200190565b8051600110156102335760400190565b8051600210156102335760600190565b8051600310156102335760800190565b8051600410156102335760a00190565b8051600510156102335760c00190565b8051600610156102335760e00190565b805160071015610233576101000190565b805160081015610233576101200190565b80518210156102335760209160051b010190565b610f98602061016593610f3e60a0610e60610d63565b95610e89610e84610e7883516001600160401b031690565b6001600160401b031690565b6116f2565b610e9288610da7565b52610e9c87610da7565b50610ea9858201516116f2565b610eb288610db4565b52610ebc87610db4565b50610ed7610e84610e7860408401516001600160401b031690565b610ee088610dc4565b52610eea87610dc4565b506060810151610f02906001600160a01b03166116c0565b610f0b88610dd4565b52610f1587610dd4565b50610f2360808201516116f2565b610f2c88610de4565b52610f3687610de4565b500151611421565b610f4785610df4565b52610f5184610df4565b50610f5f60408201516116f2565b610f6885610e04565b52610f7284610e04565b50610f7d81516116f2565b610f8685610e14565b52610f9084610e14565b5001516116f2565b610fa182610e25565b52610fab81610e25565b5061159d565b60405190610fbe82610969565b60006040838281528260208201520152565b90610fe36020928281519485920161010c565b0190565b90929192610ff3610fb1565b506040906000808361106061108f825160209687820152868152611016816109a4565b8351908b8883015287825261102a826109a4565b6110838551611038816109bf565b878152611073875196879460808d87019a6110538c60049052565b87015260a086019061012f565b601f19958686830301606087015261012f565b908484830301608085015261012f565b039081018352826109da565b51906006600160981b015afa916110a4610ac4565b92156110c1575050906110b9610aa792611144565b938491611346565b60649250519062461bcd60e51b82526004820152600c60248201526b1cda59db8e8819985a5b195960a21b6044820152fd5b8051600210156102335760220190565b8051600110156102335760210190565b8051600310156102335760230190565b8051600410156102335760240190565b908151811015610233570160200190565b9061114d610fb1565b9160088151106112ff576001600160f81b0319600360fc1b8161118061117285610da7565b516001600160f81b03191690565b16036112ff57600160f91b8082611199611172866110f3565b16036112ff576111bd6111b76111b161117286611103565b60f81c90565b60ff1690565b916111d06111b76111b161117287611113565b92602184116112ff576111e284610c6a565b906111fe6111b76111b16111726111f886610c78565b8a611133565b93602185116112ff57611224611217611172858a611133565b6001600160f81b03191690565b036112ff578061123c6112378688610ca2565b610c86565b036112ff5761124c865191610c94565b036112ff5761125a90610c94565b9060049060218514611311575b602184146112cc575b509060208092860101519401015191602081106112b5575b506020811061129d575b509083526020830152565b6112a96112ae91610bfe565b610c2d565b1c38611292565b6112a96112c491949294610bfe565b1c9138611288565b6112dc6111728488969496611133565b166112ff5760206112f66112f08294610c78565b92610bea565b93919250611270565b6040516386cd05c560e01b8152600490fd5b93908461132061117288611123565b166113375750611331600591610bea565b93611267565b6040516386cd05c560e01b8152fd5b916040810190601b825280519260208201906020611382835160405197848960609194939260808201958252601b602083015260408201520152565b866000978892838052039060015afa156106925784516001600160a01b0396871696168690036113b5575b505050505050565b6113e78593601c602096525192516040519384938460609194939260808201958252601c602083015260408201520152565b838052039060015afa1561069257516001600160a01b03160361140f573880808080806113ad565b604051634532600d60e01b8152600490fd5b906000918051926001938481149081611585575b501561144057509150565b81519360388510156114b25750926114a46101659261149e949561148161147160ff61146a6117c5565b961661183b565b60f81b6001600160f81b03191690565b901a61148c84610da7565b535b6040519485936020850190610fd0565b90610fd0565b03601f1981018352826109da565b9190808380805b611553575b50506114d16114cc83610c78565b6117f7565b936114e96114716114e460ff861661183b565b611829565b821a6114f486610da7565b535b828111156115145750505061149e929350906114a46101659261148e565b8061153c6114716111b76111b761153661153161154e978a610c20565b61185f565b8c611796565b831a6115488288611133565b536117b6565b6114f6565b909261155f8489611796565b1561157d57611570611576916117b6565b93610c45565b90806114b9565b9250806114be565b905015610233576080602083015160f81c1038611435565b6115a69061186e565b80516000603882101561161757506020610165916115d161147160ff6115ca6117c5565b931661184d565b60001a6115dd82610da7565b535b60405193816115f7869351809286808701910161010c565b820161160b8251809386808501910161010c565b010380845201826109da565b909260019290915b6116298486611796565b156116405761157061163a916117b6565b9261161f565b9092509290926116526114cc82610c78565b916116656114716114e460ff851661184d565b60001a61167184610da7565b5360015b8281111561168b575050506020610165916115df565b806116ae6114716111b76111b76116a86115316116bb978a610c20565b87611796565b60001a6115488287611133565b611675565b61016590604051906bffffffffffffffffffffffff199060601b166020820152601481526116ed816109a4565b611421565b9060405161170c816114a460209586830160209181520190565b60009283905b80821061176c575b506117276114cc82610bfe565b91845b835181101561175e576117599061174d611172611746866117b6565b9585611133565b871a6115488287611133565b61172a565b505050610165919250611421565b9061177d6112176111728386611133565b6117905761178a906117b6565b90611712565b9061171a565b81156117a0570490565b634e487b7160e01b600052601260045260246000fd5b6000198114610bf95760010190565b604051906117d2826109a4565b6001825260203681840137565b6040516117eb816109bf565b60008152906000368137565b9061180182610aa9565b61180e60405191826109da565b828152809261181f601f1991610aa9565b0190602036910137565b60ff60379116019060ff8211610bf957565b60ff60809116019060ff8211610bf957565b60ff60c09116019060ff8211610bf957565b601f8111610bf9576101000a90565b8051156119075790600091825b81518410156118a95761189d6118a3916118958685610e36565b515190610ca2565b936117b6565b9261187b565b6118b5919293506117f7565b906020808301936000945b83518610156118ff576118f36118f9916118e96118dd8988610e36565b51868151910183611910565b6118958887610e36565b956117b6565b946118c0565b509350505090565b506101656117df565b92905b6020938484106119485781518152848101809111610bf957938101809111610bf95791601f198101908111610bf95791611913565b9290919350600019906020036101000a0190811990511690825116179052565b1561196f57565b60405162461bcd60e51b815260206004820152601760248201527f57616c6c657420616c726561647920696d706f727465640000000000000000006044820152606490fd5b60025468010000000000000000811015610984576001810180600255811015610233576002600052600080516020611e0e8339815191520155565b60646002541015611aa25780611a735750611a08611c45565b6001600160a01b0382166000818152600360205260409020611a499190611a30905415611968565b611a39816119b4565b6000526003602052604060002090565b556001600160a01b038116600090815260016020526040902061016590805460ff19166001179055565b611a9c611a96604051611a91816114a4866020830160209181520190565b611d29565b50611ae7565b90611a08565b60405162461bcd60e51b815260206004820152601b60248201527f4d6178203130302077616c6c65747320706572206163636f756e7400000000006044820152606490fd5b6021815103611be357602181015190805115610233576020015160f81c6000600282141580611bd8575b611bc657806401000003d019604051602081019160208352602060408301526020606083015280600781808a80098a0908608083015263400000f4600160fe1b0360a083015260c0808301919091528152611b6b81610989565b519060055afa91611b7a610ac4565b9215611bb457611b9f611b99611b9261016595611bf5565b9384610ca2565b60011690565b15611c185790611bae90610c0c565b90611c18565b60405163102875ed60e01b8152600490fd5b60405163ab4be04160e01b8152600490fd5b506003821415611b11565b604051636446a2c560e11b8152600490fd5b602081519101519060208110611c09575090565b6000199060200360031b1b1690565b6040519160208301918252604083015260408252611c3582610969565b905190206001600160a01b031690565b600080604051611c54816109bf565b818152604051611c7a816114a4602082019460208652604080840152606083019061012f565b51906001600160981b015afa611c8e610ac4565b9015611cac57611ca9611a96611ca383611bf5565b92611d29565b91565b60405162461bcd60e51b81526020600482015260136024820152721c985b991bdb509e5d195cce8819985a5b1959606a1b6044820152606490fd5b81601f82011215610238578051611cfd81610aa9565b92611d0b60405194856109da565b8184526020828401011161023857610165916020808501910161010c565b906040908151602090611d50816114a484820197600489528780840152606083019061012f565b51600094859182916005600160981b015afa90611d6b610ac4565b9115611dca5781518201918481838501940312611dc65781810151906001600160401b0391828111611dc2578484611da592840101611ce7565b95810151918211611dbe57610165949596500101611ce7565b8680fd5b8780fd5b8580fd5b60649084519062461bcd60e51b82526004820152601b60248201527f67656e207369676e696e67206b6579706169723a206661696c656400000000006044820152fdfe405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acea2646970667358221220b5b7e3b24a6c47280a8739558842272f83896db95ef6f1e76e0463eb6ae1330964736f6c63430008150033";

type AccountEVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountEVMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountEVM__factory extends ContractFactory {
  constructor(...args: AccountEVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AccountEVM & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AccountEVM__factory {
    return super.connect(runner) as AccountEVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountEVMInterface {
    return new Interface(_abi) as AccountEVMInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AccountEVM {
    return new Contract(address, _abi, runner) as unknown as AccountEVM;
  }
}
