/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AccountEVM,
  AccountEVMInterface,
} from "../../contracts/AccountEVM";

const _abi = [
  {
    inputs: [],
    name: "DER_Split_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "expmod_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "k256Decompress_Invalid_Length_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "k256DeriveY_Invalid_Prefix_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "recoverV_Error",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "addressToBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_b",
        type: "bytes32",
      },
    ],
    name: "bytes32ToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
    ],
    name: "call",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "createWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "exportPrivateKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWalletList",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialController",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "modifyController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
    ],
    name: "sign",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "v",
            type: "uint256",
          },
        ],
        internalType: "struct SignatureRSV",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "gasPrice",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "gasLimit",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct EIP155Signer.EthTx",
        name: "txToSign",
        type: "tuple",
      },
    ],
    name: "signEIP155",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
    ],
    name: "staticcall",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "walletAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461002357600160ff196000541617600055611d1a90816100298239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8063089b8fae146100f75780631b8b921d146100f25780631d647605146100ed578063260558a0146100e85780632cc0b254146100e357806337022e98146100de5780635ced058e146100d95780637d1f3b6f146100d457806382c947b7146100cf57806388196f68146100ca578063a9059cbb146100c5578063b429afeb146100c0578063e341eaa4146100bb5763fc9ffe02146100b657600080fd5b610777565b61068f565b610650565b6105e3565b61057c565b610550565b6104e0565b6104b9565b610450565b6103ae565b610365565b610316565b6102a4565b610158565b60005b83811061010f5750506000910152565b81810151838201526020016100ff565b90602091610138815180928185528580860191016100fc565b601f01601f1916010190565b90602061015592818152019061011f565b90565b346102195760031960403682011261021957600435602435916001600160401b0383116102195760e0908336030112610219573360005260016020526101aa600160ff60406000205416151514610808565b60025481106101b8816108ef565b1561021457600080516020611cc5833981519152015460008181526003602052604090206102109261020492916101f59054913690600401610a06565b916001600160a01b0316610b66565b60405191829182610144565b0390f35b61092f565b600080fd5b600435906001600160a01b038216820361021957565b35906001600160a01b038216820361021957565b6040600319820112610219576004356001600160a01b038116810361021957916024356001600160401b039283821161021957806023830112156102195781600401359384116102195760248483010111610219576024019190565b34610219576102b236610248565b9160009283809333825260016020526102d6600160ff604085205416151514610808565b826040519384928337810182815203925af16102f061097b565b901561030e576102109060405191829160208352602083019061011f565b602081519101fd5b3461021957602036600319011261021957336000526001602052610346600160ff60406000205416151514610808565b60206103536004356118a6565b6040516001600160a01b039091168152f35b346102195760008061037636610248565b903384526001602052610394600160ff604087205416151514610808565b816040519283928337810184815203915afa6102f061097b565b34610219576040366003190112610219576103c761021e565b60ff600054166104165760018060a01b031660005260016020526103f66040600020600160ff19825416179055565b6104016024356118a6565b50610414600160ff196000541617600055565b005b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e525b9a5d1a585b1a5e995960721b6044820152606490fd5b346102195760403660031901126102195761046961021e565b602435801515809103610219576000913383526001602052610496600160ff604086205416151514610808565b60018060a01b031682526001602052604082209060ff8019835416911617905580f35b34610219576020366003190112610219576040516004356001600160a01b03168152602090f35b3461021957602036600319011261021957600435336000526001602052610513600160ff60406000205416151514610808565b60025481101561021457600080516020611cc583398151915201546000526003602052610210604060002054604051918291829190602083019252565b346102195760203660031901126102195760206001600160a01b0361057361021e565b16604051908152f35b34610219576020366003190112610219576004353360005260016020526105af600160ff60406000205416151514610808565b60025481106105bd816108ef565b15610214576020906002600052600080516020611cc58339815191520154604051908152f35b34610219576040366003190112610219576105fc61021e565b6024359060008080809481943383526001602052610625600160ff604086205416151514610808565b82908215610646575b6001600160a01b031690f1156106415780f35b610945565b6108fc915061062e565b34610219576020366003190112610219576001600160a01b0361067161021e565b166000526001602052602060ff604060002054166040519015158152f35b34610219576040366003190112610219576004356106ab610e68565b503360005260016020526106cb600160ff60406000205416151514610808565b60025481106106d9816108ef565b1561021457600080516020611cc583398151915201546000818152600360205260409020546102109161071891602435916001600160a01b0316610e9e565b60408051825181526020808401519082015291810151908201529081906060820190565b6020908160408183019282815285518094520193019160005b828110610763575050505090565b835185529381019392810192600101610755565b34610219576000806003193601126108055733815260016020918183526107a88260ff604084205416151514610808565b60405191828460025491828152019460028452600080516020611cc583398151915293905b8282106107f057610210866107e4818a03826108ce565b6040519182918261073c565b845487529586019593830193908301906107cd565b80fd5b1561080f57565b60405162461bcd60e51b815260206004820152601060248201526f27b7363ca13ca1b7b73a3937b63632b960811b6044820152606490fd5b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761087857604052565b610847565b60e081019081106001600160401b0382111761087857604052565b604081019081106001600160401b0382111761087857604052565b602081019081106001600160401b0382111761087857604052565b90601f801991011681019081106001600160401b0382111761087857604052565b156108f657565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081dd85b1b195d081a59607a1b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b6040513d6000823e3d90fd5b6040519061095e8261087d565b565b6001600160401b03811161087857601f01601f191660200190565b3d156109a6573d9061098c82610960565b9161099a60405193846108ce565b82523d6000602084013e565b606090565b35906001600160401b038216820361021957565b81601f82011215610219578035906109d682610960565b926109e460405194856108ce565b8284526020838301011161021957816000926020809301838601378301015290565b919060e08382031261021957610a1a610951565b92610a24816109ab565b845260208101356020850152610a3c604082016109ab565b6040850152610a4d60608201610234565b60608501526080810135608085015260a08101356001600160401b0381116102195760c092610a7d9183016109bf565b60a0850152013560c0830152565b634e487b7160e01b600052601160045260246000fd5b600019810191908211610ab057565b610a8b565b6020039060208211610ab057565b6401000003d01990810391908211610ab057565b91908203918211610ab057565b600381901b91906001600160fd1b03811603610ab057565b908160081b918083046101001490151715610ab057565b9060238201809211610ab057565b6004019081600411610ab057565b9060018201809211610ab057565b9060048201809211610ab057565b9060028201809211610ab057565b91908201809211610ab057565b610bd690929192610b75610e68565b5060c0830193610ba3855160405190610b8d8261085d565b6000825260006020830152604082015285610d01565b604051610bcd60208281610bc081830196878151938492016100fc565b81010380845201826108ce565b51902091610e9e565b9060408201805193601a198501948511610ab057518060011b9080820460021490151715610ab057610c0e610c139161015596610b59565b610b13565b9052610d01565b6040519061014082018281106001600160401b0382111761087857604052600982528160005b6101208110610c4d575050565b806060602080938501015201610c40565b8051156102145760200190565b8051600110156102145760400190565b8051600210156102145760600190565b8051600310156102145760800190565b8051600410156102145760a00190565b8051600510156102145760c00190565b8051600610156102145760e00190565b805160071015610214576101000190565b805160081015610214576101200190565b80518210156102145760209160051b010190565b610e4f602061015593610df560a0610d17610c1a565b95610d40610d3b610d2f83516001600160401b031690565b6001600160401b031690565b6115a9565b610d4988610c5e565b52610d5387610c5e565b50610d60858201516115a9565b610d6988610c6b565b52610d7387610c6b565b50610d8e610d3b610d2f60408401516001600160401b031690565b610d9788610c7b565b52610da187610c7b565b506060810151610db9906001600160a01b0316611577565b610dc288610c8b565b52610dcc87610c8b565b50610dda60808201516115a9565b610de388610c9b565b52610ded87610c9b565b5001516112d8565b610dfe85610cab565b52610e0884610cab565b50610e1660408201516115a9565b610e1f85610cbb565b52610e2984610cbb565b50610e3481516115a9565b610e3d85610ccb565b52610e4784610ccb565b5001516115a9565b610e5882610cdc565b52610e6281610cdc565b50611454565b60405190610e758261085d565b60006040838281528260208201520152565b90610e9a602092828151948592016100fc565b0190565b90929192610eaa610e68565b5060409060008083610f17610f46825160209687820152868152610ecd81610898565b8351908b88830152878252610ee182610898565b610f3a8551610eef816108b3565b878152610f2a875196879460808d87019a610f0a8c60049052565b87015260a086019061011f565b601f19958686830301606087015261011f565b908484830301608085015261011f565b039081018352826108ce565b51906006600160981b015afa91610f5b61097b565b9215610f7857505090610f7061095e92610ffb565b9384916111fd565b60649250519062461bcd60e51b82526004820152600c60248201526b1cda59db8e8819985a5b195960a21b6044820152fd5b8051600210156102145760220190565b8051600110156102145760210190565b8051600310156102145760230190565b8051600410156102145760240190565b908151811015610214570160200190565b90611004610e68565b9160088151106111b6576001600160f81b0319600360fc1b8161103761102985610c5e565b516001600160f81b03191690565b16036111b657600160f91b808261105061102986610faa565b16036111b65761107461106e61106861102986610fba565b60f81c90565b60ff1690565b9161108761106e61106861102987610fca565b92602184116111b65761109984610b21565b906110b561106e6110686110296110af86610b2f565b8a610fea565b93602185116111b6576110db6110ce611029858a610fea565b6001600160f81b03191690565b036111b657806110f36110ee8688610b59565b610b3d565b036111b657611103865191610b4b565b036111b65761111190610b4b565b90600490602185146111c8575b60218414611183575b5090602080928601015194010151916020811061116c575b5060208110611154575b509083526020830152565b61116061116591610ab5565b610ae4565b1c38611149565b61116061117b91949294610ab5565b1c913861113f565b6111936110298488969496610fea565b166111b65760206111ad6111a78294610b2f565b92610aa1565b93919250611127565b6040516386cd05c560e01b8152600490fd5b9390846111d761102988610fda565b166111ee57506111e8600591610aa1565b9361111e565b6040516386cd05c560e01b8152fd5b916040810190601b825280519260208201906020611239835160405197848960609194939260808201958252601b602083015260408201520152565b866000978892838052039060015afa156106415784516001600160a01b03968716961686900361126c575b505050505050565b61129e8593601c602096525192516040519384938460609194939260808201958252601c602083015260408201520152565b838052039060015afa1561064157516001600160a01b0316036112c657388080808080611264565b604051634532600d60e01b8152600490fd5b90600091805192600193848114908161143c575b50156112f757509150565b815193603885101561136957509261135b61015592611355949561133861132860ff61132161167c565b96166116f2565b60f81b6001600160f81b03191690565b901a61134384610c5e565b535b6040519485936020850190610e87565b90610e87565b03601f1981018352826108ce565b9190808380805b61140a575b505061138861138383610b2f565b6116ae565b936113a061132861139b60ff86166116f2565b6116e0565b821a6113ab86610c5e565b535b828111156113cb575050506113559293509061135b61015592611345565b806113f361132861106e61106e6113ed6113e8611405978a610ad7565b611716565b8c61164d565b831a6113ff8288610fea565b5361166d565b6113ad565b9092611416848961164d565b156114345761142761142d9161166d565b93610afc565b9080611370565b925080611375565b905015610214576080602083015160f81c10386112ec565b61145d90611725565b8051600060388210156114ce575060206101559161148861132860ff61148161167c565b9316611704565b60001a61149482610c5e565b535b60405193816114ae86935180928680870191016100fc565b82016114c2825180938680850191016100fc565b010380845201826108ce565b909260019290915b6114e0848661164d565b156114f7576114276114f19161166d565b926114d6565b90925092909261150961138382610b2f565b9161151c61132861139b60ff8516611704565b60001a61152884610c5e565b5360015b8281111561154257505050602061015591611496565b8061156561132861106e61106e61155f6113e8611572978a610ad7565b8761164d565b60001a6113ff8287610fea565b61152c565b61015590604051906bffffffffffffffffffffffff199060601b166020820152601481526115a481610898565b6112d8565b906040516115c38161135b60209586830160209181520190565b60009283905b808210611623575b506115de61138382610ab5565b91845b835181101561161557611610906116046110296115fd8661166d565b9585610fea565b871a6113ff8287610fea565b6115e1565b5050506101559192506112d8565b906116346110ce6110298386610fea565b611647576116419061166d565b906115c9565b906115d1565b8115611657570490565b634e487b7160e01b600052601260045260246000fd5b6000198114610ab05760010190565b6040519061168982610898565b6001825260203681840137565b6040516116a2816108b3565b60008152906000368137565b906116b882610960565b6116c560405191826108ce565b82815280926116d6601f1991610960565b0190602036910137565b60ff60379116019060ff8211610ab057565b60ff60809116019060ff8211610ab057565b60ff60c09116019060ff8211610ab057565b601f8111610ab0576101000a90565b8051156117be5790600091825b81518410156117605761175461175a9161174c8685610ced565b515190610b59565b9361166d565b92611732565b61176c919293506116ae565b906020808301936000945b83518610156117b6576117aa6117b0916117a06117948988610ced565b518681519101836117c7565b61174c8887610ced565b9561166d565b94611777565b509350505090565b50610155611696565b92905b6020938484106117ff5781518152848101809111610ab057938101809111610ab05791601f198101908111610ab057916117ca565b9290919350600019906020036101000a0190811990511690825116179052565b1561182657565b60405162461bcd60e51b815260206004820152601760248201527f57616c6c657420616c726561647920696d706f727465640000000000000000006044820152606490fd5b60025468010000000000000000811015610878576001810180600255811015610214576002600052600080516020611cc58339815191520155565b60646002541015611959578061192a57506118bf611afc565b6001600160a01b038216600081815260036020526040902061190091906118e790541561181f565b6118f08161186b565b6000526003602052604060002090565b556001600160a01b038116600090815260016020526040902061015590805460ff19166001179055565b61195361194d6040516119488161135b866020830160209181520190565b611be0565b5061199e565b906118bf565b60405162461bcd60e51b815260206004820152601b60248201527f4d6178203130302077616c6c65747320706572206163636f756e7400000000006044820152606490fd5b6021815103611a9a57602181015190805115610214576020015160f81c6000600282141580611a8f575b611a7d57806401000003d019604051602081019160208352602060408301526020606083015280600781808a80098a0908608083015263400000f4600160fe1b0360a083015260c0808301919091528152611a228161087d565b519060055afa91611a3161097b565b9215611a6b57611a56611a50611a4961015595611aac565b9384610b59565b60011690565b15611acf5790611a6590610ac3565b90611acf565b60405163102875ed60e01b8152600490fd5b60405163ab4be04160e01b8152600490fd5b5060038214156119c8565b604051636446a2c560e11b8152600490fd5b602081519101519060208110611ac0575090565b6000199060200360031b1b1690565b6040519160208301918252604083015260408252611aec8261085d565b905190206001600160a01b031690565b600080604051611b0b816108b3565b818152604051611b318161135b602082019460208652604080840152606083019061011f565b51906001600160981b015afa611b4561097b565b9015611b6357611b6061194d611b5a83611aac565b92611be0565b91565b60405162461bcd60e51b81526020600482015260136024820152721c985b991bdb509e5d195cce8819985a5b1959606a1b6044820152606490fd5b81601f82011215610219578051611bb481610960565b92611bc260405194856108ce565b818452602082840101116102195761015591602080850191016100fc565b906040908151602090611c078161135b84820197600489528780840152606083019061011f565b51600094859182916005600160981b015afa90611c2261097b565b9115611c815781518201918481838501940312611c7d5781810151906001600160401b0391828111611c79578484611c5c92840101611b9e565b95810151918211611c7557610155949596500101611b9e565b8680fd5b8780fd5b8580fd5b60649084519062461bcd60e51b82526004820152601b60248201527f67656e207369676e696e67206b6579706169723a206661696c656400000000006044820152fdfe405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acea2646970667358221220c3fbb1ccc352de855562f7b7fde2cd97cb10189fad3a5a367d3788dfb4a03feb64736f6c63430008150033";

type AccountEVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountEVMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountEVM__factory extends ContractFactory {
  constructor(...args: AccountEVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AccountEVM & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AccountEVM__factory {
    return super.connect(runner) as AccountEVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountEVMInterface {
    return new Interface(_abi) as AccountEVMInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AccountEVM {
    return new Contract(address, _abi, runner) as unknown as AccountEVM;
  }
}
