/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AccountEVM,
  AccountEVMInterface,
} from "../../contracts/AccountEVM";

const _abi = [
  {
    inputs: [],
    name: "DER_Split_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "expmod_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "k256Decompress_Invalid_Length_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "k256DeriveY_Invalid_Prefix_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "recoverV_Error",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "publicAddress",
        type: "bytes32",
      },
    ],
    name: "WalletCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "addressToBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_b",
        type: "bytes32",
      },
    ],
    name: "bytes32ToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
    ],
    name: "call",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "createWallet",
    outputs: [
      {
        internalType: "bytes32",
        name: "publicAddress",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "exportPrivateKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWalletList",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialController",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "modifyController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "removeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
    ],
    name: "sign",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "v",
            type: "uint256",
          },
        ],
        internalType: "struct SignatureRSV",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "gasPrice",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "gasLimit",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct EIP155Signer.EthTx",
        name: "txToSign",
        type: "tuple",
      },
    ],
    name: "signEIP155",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
    ],
    name: "staticcall",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "walletAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461002357600160ff196000541617600055611ee190816100298239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8063089b8fae146101075780631b8b921d146101025780631d647605146100fd578063260558a0146100f85780632cc0b254146100f357806337022e98146100ee5780635ced058e146100e95780637d1f3b6f146100e457806382c947b7146100df57806388196f68146100da578063a9059cbb146100d5578063b429afeb146100d0578063d04731d4146100cb578063e341eaa4146100c65763fc9ffe02146100c157600080fd5b610905565b61080d565b610761565b610722565b6106b5565b610635565b610609565b610580565b610559565b6104ad565b6103e9565b6103a0565b610335565b6102c3565b610168565b60005b83811061011f5750506000910152565b818101518382015260200161010f565b906020916101488151809281855285808601910161010c565b601f01601f1916010190565b90602061016592818152019061012f565b90565b346102385760031960403682011261023857600435602435916001600160401b0383116102385760e0908336030112610238573360005260016020526101ba600160ff6040600020541615151461099a565b60025481106101c8816109d9565b156102335761022f91610223916002600052600080516020611e8c8339815191520154906101f7821515610a2f565b816000526003602052610214604060002054913690600401610b99565b916001600160a01b0316610d54565b60405191829182610154565b0390f35b610a19565b600080fd5b600435906001600160a01b038216820361023857565b35906001600160a01b038216820361023857565b6040600319820112610238576004356001600160a01b038116810361023857916024356001600160401b039283821161023857806023830112156102385781600401359384116102385760248483010111610238576024019190565b34610238576102d136610267565b9160009283809333825260016020526102f5600160ff60408520541615151461099a565b826040519384928337810182815203925af161030f610c1e565b901561032d5761022f9060405191829160208352602083019061012f565b602081519101fd5b3461023857602036600319011261023857336000526001602052610365600160ff6040600020541615151461099a565b6020610372600435610e8f565b60405190807ff881aa008a081a5e5774e6162db04235bef4d185781a42ed861bb0a74969b9b7600080a28152f35b34610238576000806103b136610267565b9033845260016020526103cf600160ff60408720541615151461099a565b816040519283928337810184815203915afa61030f610c1e565b346102385760403660031901126102385761040261023d565b60009060ff825416610473576001600160a01b031681526001602081905260408220805460ff1916909117905561043a602435610e8f565b7ff881aa008a081a5e5774e6162db04235bef4d185781a42ed861bb0a74969b9b78280a2610470600160ff196000541617600055565b80f35b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e525b9a5d1a585b1a5e995960721b6044820152606490fd5b34610238576040366003190112610238576104c661023d565b60243580151581036102385760009133835260016020526104f2600160ff60408620541615151461099a565b6001600160a01b0316908115610522576104709183526001602052604083209060ff801983541691151516179055565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b34610238576020366003190112610238576040516004356001600160a01b03168152602090f35b34610238576020366003190112610238576004353360005260016020526105b3600160ff6040600020541615151461099a565b60025481106105c1816109d9565b15610233576002600052600080516020611e8c83398151915201546105e7811515610a2f565b600052600360205261022f604060002054604051918291829190602083019252565b346102385760203660031901126102385760206001600160a01b0361062c61023d565b16604051908152f35b3461023857602036600319011261023857600435336000526001602052610668600160ff6040600020541615151461099a565b6002548110610676816109d9565b156102335761022f906002600052600080516020611e8c83398151915201546106a0811515610a2f565b60026000526040519081529081906020820190565b34610238576040366003190112610238576106ce61023d565b60243590600080808094819433835260016020526106f7600160ff60408620541615151461099a565b82908215610718575b6001600160a01b031690f1156107135780f35b610c4e565b6108fc9150610700565b34610238576020366003190112610238576001600160a01b0361074361023d565b166000526001602052602060ff604060002054166040519015158152f35b34610238576020366003190112610238576004356000903382526001602052610795600160ff60408520541615151461099a565b60025481106107a3816109d9565b15610233576002825280600080516020611e8c83398151915201908154906107cc821515610a2f565b818452600360205283604081205560025411156102335760028352908290556001600160a01b03166000908152600160205260409020805460ff1916905580f35b3461023857604036600319011261023857600435610829610c5a565b50336000526001602052610849600160ff6040600020541615151461099a565b6002548110610857816109d9565b15610233576108a561022f916002600052600080516020611e8c8339815191520154610884811515610a2f565b600081815260036020526040902054602435916001600160a01b0316610fa3565b60408051825181526020808401519082015291810151908201529081906060820190565b602090602060408183019282815285518094520193019160005b8281106108f1575050505090565b8351855293810193928101926001016108e3565b34610238576000806003193601126109975733815260016020916001602052610939600160ff60408420541615151461099a565b6040519182602060025491828152019460028452600080516020611e8c83398151915293905b8282106109825761022f86610976818a0382610af3565b604051918291826108c9565b8454875295860195938301939083019061095f565b80fd5b156109a157565b60405162461bcd60e51b815260206004820152601060248201526f27b7363ca13ca1b7b73a3937b63632b960811b6044820152606490fd5b156109e057565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081dd85b1b195d081a59607a1b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b15610a3657565b60405162461bcd60e51b815260206004820152600e60248201526d15d85b1b195d081c995b5bdd995960921b6044820152606490fd5b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b03821117610a9d57604052565b610a6c565b60e081019081106001600160401b03821117610a9d57604052565b604081019081106001600160401b03821117610a9d57604052565b602081019081106001600160401b03821117610a9d57604052565b90601f801991011681019081106001600160401b03821117610a9d57604052565b60405190610b2182610aa2565b565b35906001600160401b038216820361023857565b6001600160401b038111610a9d57601f01601f191660200190565b81601f8201121561023857803590610b6982610b37565b92610b776040519485610af3565b8284526020838301011161023857816000926020809301838601378301015290565b919060e08382031261023857610bad610b14565b92610bb781610b23565b845260208101356020850152610bcf60408201610b23565b6040850152610be060608201610253565b60608501526080810135608085015260a08101356001600160401b0381116102385760c092610c10918301610b52565b60a0850152013560c0830152565b3d15610c49573d90610c2f82610b37565b91610c3d6040519384610af3565b82523d6000602084013e565b606090565b6040513d6000823e3d90fd5b60405190610c6782610a82565b60006040838281528260208201520152565b634e487b7160e01b600052601160045260246000fd5b6401000003d01990810391908211610ca357565b610c79565b600019810191908211610ca357565b6020039060208211610ca357565b91908203918211610ca357565b600381901b91906001600160fd1b03811603610ca357565b908160081b918083046101001490151715610ca357565b9060238201809211610ca357565b6004019081600411610ca357565b9060018201809211610ca357565b9060048201809211610ca357565b9060028201809211610ca357565b91908201809211610ca357565b610dc490929192610d63610c5a565b5060c0830193610d91855160405190610d7b82610a82565b60008252600060208301526040820152856111ad565b604051610dbb60208281610dae818301968781519384920161010c565b8101038084520182610af3565b51902091610fa3565b9060408201805193601a198501948511610ca357518060011b9080820460021490151715610ca357610dfc610e019161016596610d47565b610d01565b90526111ad565b15610e0f57565b60405162461bcd60e51b815260206004820152601760248201527f57616c6c657420616c726561647920696d706f727465640000000000000000006044820152606490fd5b60025468010000000000000000811015610a9d576001810180600255811015610233576002600052600080516020611e8c8339815191520155565b60646002541015610f5e5780610f1c5750610f0f610165610eae61156b565b92905b6001600160a01b0381166000818152600360205260409020909490610ed7905415610e08565b610ee085610e54565b610ef4856000526003602052604060002090565b556001600160a01b0316600090815260016020526040902090565b805460ff19166001179055565b610165610f0f610f59610f53604051610f4e81610f40886020830160209181520190565b03601f198101835282610af3565b611356565b5061143a565b610eb1565b60405162461bcd60e51b815260206004820152601b60248201527f4d6178203130302077616c6c65747320706572206163636f756e7400000000006044820152606490fd5b90929192610faf610c5a565b506040906000808361101c61104b825160209687820152868152610fd281610abd565b8351908b88830152878252610fe682610abd565b61103f8551610ff481610ad8565b87815261102f875196879460808d87019a61100f8c60049052565b87015260a086019061012f565b601f19958686830301606087015261012f565b908484830301608085015261012f565b03908101835282610af3565b51906006600160981b015afa91611060610c1e565b921561107d57505090611075610b219261165e565b938491611851565b60649250519062461bcd60e51b82526004820152600c60248201526b1cda59db8e8819985a5b195960a21b6044820152fd5b906110c26020928281519485920161010c565b0190565b6040519061014082018281106001600160401b03821117610a9d57604052600982528160005b61012081106110f9575050565b8060606020809385010152016110ec565b8051156102335760200190565b8051600110156102335760400190565b8051600210156102335760600190565b8051600310156102335760800190565b8051600410156102335760a00190565b8051600510156102335760c00190565b8051600610156102335760e00190565b805160071015610233576101000190565b805160081015610233576101200190565b80518210156102335760209160051b010190565b6112fb6020610165936112a160a06111c36110c6565b956111ec6111e76111db83516001600160401b031690565b6001600160401b031690565b61192c565b6111f58861110a565b526111ff8761110a565b5061120c8582015161192c565b61121588611117565b5261121f87611117565b5061123a6111e76111db60408401516001600160401b031690565b61124388611127565b5261124d87611127565b506060810151611265906001600160a01b03166119d3565b61126e88611137565b5261127887611137565b50611286608082015161192c565b61128f88611147565b5261129987611147565b500151611a00565b6112aa85611157565b526112b484611157565b506112c2604082015161192c565b6112cb85611167565b526112d584611167565b506112e0815161192c565b6112e985611177565b526112f384611177565b50015161192c565b61130482611188565b5261130e81611188565b50611b6d565b81601f8201121561023857805161132a81610b37565b926113386040519485610af3565b8184526020828401011161023857610165916020808501910161010c565b90604090815160209061137d81610f4084820197600489528780840152606083019061012f565b51600094859182916005600160981b015afa90611398610c1e565b91156113f757815182019184818385019403126113f35781810151906001600160401b03918281116113ef5784846113d292840101611314565b958101519182116113eb57610165949596500101611314565b8680fd5b8780fd5b8580fd5b60649084519062461bcd60e51b82526004820152601b60248201527f67656e207369676e696e67206b6579706169723a206661696c656400000000006044820152fd5b602181510361153657602181015190805115610233576020015160f81c600060028214158061152b575b61151957806401000003d019604051602081019160208352602060408301526020606083015280600781808a80098a0908608083015263400000f4600160fe1b0360a083015260c08083019190915281526114be81610aa2565b519060055afa916114cd610c1e565b9215611507576114f26114ec6114e561016595611548565b9384610d47565b60011690565b15611c96579061150190610c8f565b90611c96565b60405163102875ed60e01b8152600490fd5b60405163ab4be04160e01b8152600490fd5b506003821415611464565b604051636446a2c560e11b8152600490fd5b60208151910151906020811061155c575090565b6000199060200360031b1b1690565b60008060405161157a81610ad8565b8181526040516115a081610f40602082019460208652604080840152606083019061012f565b51906001600160981b015afa6115b4610c1e565b90156115d2576115cf610f536115c983611548565b92611356565b91565b60405162461bcd60e51b81526020600482015260136024820152721c985b991bdb509e5d195cce8819985a5b1959606a1b6044820152606490fd5b8051600210156102335760220190565b8051600110156102335760210190565b8051600310156102335760230190565b8051600410156102335760240190565b908151811015610233570160200190565b90611667610c5a565b916008815110611819576001600160f81b0319600360fc1b8161169a61168c8561110a565b516001600160f81b03191690565b160361181957600160f91b80826116b361168c8661160d565b1603611819576116d76116d16116cb61168c8661161d565b60f81c90565b60ff1690565b916116ea6116d16116cb61168c8761162d565b9260218411611819576116fc84610d0f565b906117186116d16116cb61168c61171286610d1d565b8a61164d565b93602185116118195761173e61173161168c858a61164d565b6001600160f81b03191690565b0361181957806117566117518688610d47565b610d2b565b0361181957611766865191610d39565b036118195761177490610d39565b906004906021851461182b575b602184146117e6575b509060208092860101519401015191602081106117cf575b50602081106117b7575b509083526020830152565b6117c36117c891610cb7565b610cd2565b1c386117ac565b6117c36117de91949294610cb7565b1c91386117a2565b6117f661168c848896949661164d565b1661181957602061181061180a8294610d1d565b92610ca8565b9391925061178a565b6040516386cd05c560e01b8152600490fd5b8094915061183b61168c8761163d565b166118195761184b600591610ca8565b93611781565b916040810190601b82528051926020820190602061188d835160405197848960609194939260808201958252601b602083015260408201520152565b866000978892838052039060015afa156107135784516001600160a01b0396871696168690036118c0575b505050505050565b6118f28593601c602096525192516040519384938460609194939260808201958252601c602083015260408201520152565b838052039060015afa1561071357516001600160a01b03160361191a573880808080806118b8565b604051634532600d60e01b8152600490fd5b9060405161194781610f406020956020830160209181520190565b6000926000905b8082106119af575b5061196861196382610cb7565b611cf5565b9160005b83518110156119a15760019061198e61168c61198786611d27565b958561164d565b871a61199a828761164d565b530161196c565b505050610165919250611a00565b906119c061173161168c838661164d565b6119cd576001019061194e565b90611956565b61016590604051906bffffffffffffffffffffffff199060601b16602082015260148152611a0081610abd565b90600091805192600193600181149081611b55575b5015611a2057509150565b8151936038851015611a84575092610f4061016592611a7e9495611a61611a5160ff611a4a611cc3565b9616611d68565b60f81b6001600160f81b03191690565b901a611a6c8461110a565b535b60405194859360208501906110af565b906110af565b9091908290600190805b611b25575b5050611aa161196382610d1d565b92611ab9611a51611ab460ff8516611d68565b611d56565b811a611ac48561110a565b5360015b82811115611ae657505050611a7e92935090610f4061016592611a6e565b80611b0e611a516116d16116d1611b08611b03611b20978a610cc5565b611d8c565b8c611d36565b831a611b1a828861164d565b53611d27565b611ac8565b9091611b318388611d36565b15611b4f57611b42611b4891611d27565b92610cea565b9080611a8e565b91611a93565b905015610233576080602083015160f81c1038611a15565b611b7690611d9b565b805160006038821015611be75750602061016591611ba1611a5160ff611b9a611cc3565b9316611d7a565b60001a611bad8261110a565b535b6040519381611bc7869351809286808701910161010c565b8201611bdb8251809386808501910161010c565b01038084520182610af3565b909260019290915b611bf98486611d36565b15611c1657611c0a611c1091611d27565b93610cea565b92611bef565b909250929092611c2861196382610d1d565b91611c3b611a51611ab460ff8516611d7a565b60001a611c478461110a565b5360015b82811115611c6157505050602061016591611baf565b80611c84611a516116d16116d1611c7e611b03611c91978a610cc5565b87611d36565b60001a611b1a828761164d565b611c4b565b6040519160208301918252604083015260408252611cb382610a82565b905190206001600160a01b031690565b60405190611cd082610abd565b6001825260203681840137565b604051611ce981610ad8565b60008152906000368137565b90611cff82610b37565b611d0c6040519182610af3565b8281528092611d1d601f1991610b37565b0190602036910137565b6000198114610ca35760010190565b8115611d40570490565b634e487b7160e01b600052601260045260246000fd5b60ff60379116019060ff8211610ca357565b60ff60809116019060ff8211610ca357565b60ff60c09116019060ff8211610ca357565b601f8111610ca3576101000a90565b805115611e2a5790600091825b8151841015611dd157611dc9600191611dc18685611199565b515190610d47565b930192611da8565b611ddd91929350611cf5565b906020808301936000945b8351861015611e2257611e1a600191611e10611e048988611199565b51868151910183611e33565b611dc18887611199565b950194611de8565b509350505090565b50610165611cdd565b92905b602093848410611e6b5781518152848101809111610ca357938101809111610ca35791601f198101908111610ca35791611e36565b9290919350600019906020036101000a019081199051169082511617905256fe405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acea2646970667358221220a67eff3686ed9810fcede9b073fa0ccaae5e21139a25641a8ba6504a053331e964736f6c63430008160033";

type AccountEVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountEVMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountEVM__factory extends ContractFactory {
  constructor(...args: AccountEVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AccountEVM & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AccountEVM__factory {
    return super.connect(runner) as AccountEVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountEVMInterface {
    return new Interface(_abi) as AccountEVMInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AccountEVM {
    return new Contract(address, _abi, runner) as unknown as AccountEVM;
  }
}
