/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AccountEVM,
  AccountEVMInterface,
} from "../../contracts/AccountEVM";

const _abi = [
  {
    inputs: [],
    name: "DER_Split_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "expmod_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "k256Decompress_Invalid_Length_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "k256DeriveY_Invalid_Prefix_Error",
    type: "error",
  },
  {
    inputs: [],
    name: "recoverV_Error",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "publicAddress",
        type: "bytes32",
      },
    ],
    name: "WalletCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "addressToBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_b",
        type: "bytes32",
      },
    ],
    name: "bytes32ToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "call",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "createWallet",
    outputs: [
      {
        internalType: "bytes32",
        name: "publicAddress",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "exportPrivateKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWalletList",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialController",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "modifyController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "removeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
    ],
    name: "sign",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "v",
            type: "uint256",
          },
        ],
        internalType: "struct SignatureRSV",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "nonce",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "gasPrice",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "gasLimit",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
        ],
        internalType: "struct EIP155Signer.EthTx",
        name: "txToSign",
        type: "tuple",
      },
    ],
    name: "signEIP155",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "staticcall",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "walletAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461002357600160ff19600054161760005561211490816100298239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8063089b8fae14610107578063095bcdb6146101025780631d647605146100fd5780632cc0b254146100f85780635ced058e146100f35780635dc7c784146100ee57806382c947b7146100e9578063873ad0ac146100e457806388196f68146100df5780638a256d19146100da578063b429afeb146100d5578063bfa3ee2a146100d0578063d04731d4146100cb578063e341eaa4146100c65763fc9ffe02146100c157600080fd5b6109c9565b6108d1565b61084b565b6107b5565b610776565b6106b7565b610637565b610572565b610519565b610460565b610439565b610375565b61030a565b610267565b610168565b60005b83811061011f5750506000910152565b818101518382015260200161010f565b906020916101488151809281855285808601910161010c565b601f01601f1916010190565b90602061016592818152019061012f565b90565b346102385760031960403682011261023857600435602435916001600160401b0383116102385760e0908336030112610238573360005260016020526101ba600160ff60406000205416151514610a5e565b60025481106101c881610a9d565b156102335761022f916102239160026000526000805160206120bf8339815191520154906101f7821515610af3565b816000526003602052610214604060002054913690600401610c5d565b916001600160a01b0316610f3e565b60405191829182610154565b0390f35b610add565b600080fd5b600435906001600160a01b038216820361023857565b35906001600160a01b038216820361023857565b346102385760603660031901126102385761028061023d565b60443590336000526001602052600160ff604060002054161515149182156102bb575b506102b06102b992610ce2565b60243590610d57565b005b9150600254821015610233576102b06103016102f56102b99460026000526000805160206120bf833981519152015460018060a01b031690565b6001600160a01b031690565b331492506102a3565b346102385760203660031901126102385733600052600160205261033a600160ff60406000205416151514610a5e565b60206103476004356110c5565b60405190807ff881aa008a081a5e5774e6162db04235bef4d185781a42ed861bb0a74969b9b7600080a28152f35b346102385760403660031901126102385761038e61023d565b60009060ff8254166103ff576001600160a01b031681526001602081905260408220805460ff191690911790556103c66024356110c5565b7ff881aa008a081a5e5774e6162db04235bef4d185781a42ed861bb0a74969b9b78280a26103fc600160ff196000541617600055565b80f35b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e525b9a5d1a585b1a5e995960721b6044820152606490fd5b34610238576020366003190112610238576040516004356001600160a01b03168152602090f35b346102385760603660031901126102385761047961023d565b60243580151581036102385760009133835260016020526104a5600160ff604086205416151514610a5e565b6001600160a01b03169081156104e2576103fc916104c64260443511610db2565b83526001602052604083209060ff801983541691151516179055565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b346102385760203660031901126102385760206001600160a01b0361053c61023d565b16604051908152f35b9181601f84011215610238578235916001600160401b038311610238576020838186019501011161023857565b346102385760803660031901126102385761058b61023d565b6024356001600160401b038111610238576105aa903690600401610545565b606492919235336000526001602052600160ff604060002054161515149081156105ea575b61022f6102238585886105e187610ce2565b60443592610df1565b929190506002548310156102335761022f936105e161062a6102f56102239660026000526000805160206120bf833981519152015460018060a01b031690565b33149293945050936105cf565b346102385760203660031901126102385760043533600052600160205261066a600160ff60406000205416151514610a5e565b600254811061067881610a9d565b156102335761022f9060026000526000805160206120bf83398151915201546106a2811515610af3565b60026000526040519081529081906020820190565b34610238576060366003190112610238576106d061023d565b6024356001600160401b038111610238576106ef903690600401610545565b90604435336000526001602052600160ff60406000205416151514908115610729575b61022f61022385858861072487610ce2565b610e24565b929190506002548310156102335761022f936107246107696102f56102239660026000526000805160206120bf833981519152015460018060a01b031690565b3314929394505093610712565b34610238576020366003190112610238576001600160a01b0361079761023d565b166000526001602052602060ff604060002054166040519015158152f35b34610238576040366003190112610238576004353360005260016020526107e8600160ff60406000205416151514610a5e565b60025481106107f681610a9d565b156102335760026000526000805160206120bf833981519152015461081c811515610af3565b6108294260243511610db2565b600052600360205261022f604060002054604051918291829190602083019252565b3461023857602036600319011261023857600435600090338252600160205261087f600160ff604085205416151514610a5e565b600254811061088d81610a9d565b156102335760028252806000805160206120bf833981519152019081546108b5811515610af3565b8352600360205282604081205560025411156102335781905580f35b34610238576040366003190112610238576004356108ed610e44565b5033600052600160205261090d600160ff60406000205416151514610a5e565b600254811061091b81610a9d565b156102335761096961022f9160026000526000805160206120bf8339815191520154610948811515610af3565b600081815260036020526040902054602435916001600160a01b03166111c5565b60408051825181526020808401519082015291810151908201529081906060820190565b602090602060408183019282815285518094520193019160005b8281106109b5575050505090565b8351855293810193928101926001016109a7565b3461023857600080600319360112610a5b57338152600160209160016020526109fd600160ff604084205416151514610a5e565b60405191826020600254918281520194600284526000805160206120bf83398151915293905b828210610a465761022f86610a3a818a0382610bb7565b6040519182918261098d565b84548752958601959383019390830190610a23565b80fd5b15610a6557565b60405162461bcd60e51b815260206004820152601060248201526f27b7363ca13ca1b7b73a3937b63632b960811b6044820152606490fd5b15610aa457565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081dd85b1b195d081a59607a1b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b15610afa57565b60405162461bcd60e51b815260206004820152600e60248201526d15d85b1b195d081c995b5bdd995960921b6044820152606490fd5b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b03821117610b6157604052565b610b30565b60e081019081106001600160401b03821117610b6157604052565b604081019081106001600160401b03821117610b6157604052565b602081019081106001600160401b03821117610b6157604052565b90601f801991011681019081106001600160401b03821117610b6157604052565b60405190610be582610b66565b565b35906001600160401b038216820361023857565b6001600160401b038111610b6157601f01601f191660200190565b81601f8201121561023857803590610c2d82610bfb565b92610c3b6040519485610bb7565b8284526020838301011161023857816000926020809301838601378301015290565b919060e08382031261023857610c71610bd8565b92610c7b81610be7565b845260208101356020850152610c9360408201610be7565b6040850152610ca460608201610253565b60608501526080810135608085015260a08101356001600160401b0381116102385760c092610cd4918301610c16565b60a0850152013560c0830152565b15610ce957565b60405162461bcd60e51b815260206004820152601660248201527527b7363ca13ca1b7b73a3937b63632b927b929b2b63360511b6044820152606490fd5b3d15610d52573d90610d3882610bfb565b91610d466040519384610bb7565b82523d6000602084013e565b606090565b6000918291829182916001600160a01b03165af1610d73610d27565b5015610d7b57565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b15610db957565b60405162461bcd60e51b815260206004820152601060248201526f496e76616c696420646561646c696e6560801b6044820152606490fd5b90916000938493826040519384928337810185815203925af190610e13610d27565b9115610e1b57565b50602081519101fd5b6000928392816040519283928337810184815203915afa90610e13610d27565b60405190610e5182610b46565b60006040838281528260208201520152565b634e487b7160e01b600052601160045260246000fd5b6401000003d01990810391908211610e8d57565b610e63565b600019810191908211610e8d57565b6020039060208211610e8d57565b91908203918211610e8d57565b600381901b91906001600160fd1b03811603610e8d57565b908160081b918083046101001490151715610e8d57565b9060238201809211610e8d57565b6004019081600411610e8d57565b9060018201809211610e8d57565b9060048201809211610e8d57565b9060028201809211610e8d57565b91908201809211610e8d57565b610fae90929192610f4d610e44565b5060c0830193610f7b855160405190610f6582610b46565b60008252600060208301526040820152856113cf565b604051610fa560208281610f98818301968781519384920161010c565b8101038084520182610bb7565b519020916111c5565b9060408201805193601a198501948511610e8d57518060011b9080820460021490151715610e8d57610fe6610feb9161016596610f31565b610eeb565b90526113cf565b15610ff957565b60405162461bcd60e51b815260206004820152601960248201527f496e76616c69642070726976617465206b65792072616e6765000000000000006044820152606490fd5b1561104557565b60405162461bcd60e51b815260206004820152601760248201527f57616c6c657420616c726561647920696d706f727465640000000000000000006044820152606490fd5b60025468010000000000000000811015610b615760018101806002558110156102335760026000526000805160206120bf8339815191520155565b60646002541015611180578061112657506110de61178d565b905b6001600160a01b0316600081815260036020526040902090919061110590541561103e565b61110e8261108a565b611122826000526003602052604060002090565b5590565b61114470014551231950b75fc4402da1732fc9bebf19821115610ff2565b61117b61117560405161117081611162866020830160209181520190565b03601f198101835282610bb7565b611578565b5061165c565b6110e0565b60405162461bcd60e51b815260206004820152601b60248201527f4d6178203130302077616c6c65747320706572206163636f756e7400000000006044820152606490fd5b909291926111d1610e44565b506040906000808361123e61126d8251602096878201528681526111f481610b81565b8351908b8883015287825261120882610b81565b611261855161121681610b9c565b878152611251875196879460808d87019a6112318c60049052565b87015260a086019061012f565b601f19958686830301606087015261012f565b908484830301608085015261012f565b03908101835282610bb7565b51906006600160981b015afa91611282610d27565b921561129f57505090611297610be592611880565b938491611a7f565b60649250519062461bcd60e51b82526004820152600c60248201526b1cda59db8e8819985a5b195960a21b6044820152fd5b906112e46020928281519485920161010c565b0190565b6040519061014082018281106001600160401b03821117610b6157604052600982528160005b610120811061131b575050565b80606060208093850101520161130e565b8051156102335760200190565b8051600110156102335760400190565b8051600210156102335760600190565b8051600310156102335760800190565b8051600410156102335760a00190565b8051600510156102335760c00190565b8051600610156102335760e00190565b805160071015610233576101000190565b805160081015610233576101200190565b80518210156102335760209160051b010190565b61151d6020610165936114c360a06113e56112e8565b9561140e6114096113fd83516001600160401b031690565b6001600160401b031690565b611b5f565b6114178861132c565b526114218761132c565b5061142e85820151611b5f565b61143788611339565b5261144187611339565b5061145c6114096113fd60408401516001600160401b031690565b61146588611349565b5261146f87611349565b506060810151611487906001600160a01b0316611c06565b61149088611359565b5261149a87611359565b506114a86080820151611b5f565b6114b188611369565b526114bb87611369565b500151611c33565b6114cc85611379565b526114d684611379565b506114e46040820151611b5f565b6114ed85611389565b526114f784611389565b506115028151611b5f565b61150b85611399565b5261151584611399565b500151611b5f565b611526826113aa565b52611530816113aa565b50611da0565b81601f8201121561023857805161154c81610bfb565b9261155a6040519485610bb7565b8184526020828401011161023857610165916020808501910161010c565b90604090815160209061159f8161116284820197600489528780840152606083019061012f565b51600094859182916005600160981b015afa906115ba610d27565b911561161957815182019184818385019403126116155781810151906001600160401b03918281116116115784846115f492840101611536565b9581015191821161160d57610165949596500101611536565b8680fd5b8780fd5b8580fd5b60649084519062461bcd60e51b82526004820152601b60248201527f67656e207369676e696e67206b6579706169723a206661696c656400000000006044820152fd5b602181510361175857602181015190805115610233576020015160f81c600060028214158061174d575b61173b57806401000003d019604051602081019160208352602060408301526020606083015280600781808a80098a0908608083015263400000f4600160fe1b0360a083015260c08083019190915281526116e081610b66565b519060055afa916116ef610d27565b92156117295761171461170e6117076101659561176a565b9384610f31565b60011690565b15611ec9579061172390610e79565b90611ec9565b60405163102875ed60e01b8152600490fd5b60405163ab4be04160e01b8152600490fd5b506003821415611686565b604051636446a2c560e11b8152600490fd5b60208151910151906020811061177e575090565b6000199060200360031b1b1690565b60008060405161179c81610b9c565b8181526040516117c281611162602082019460208652604080840152606083019061012f565b51906001600160981b015afa6117d6610d27565b90156117f4576117f16111756117eb8361176a565b92611578565b91565b60405162461bcd60e51b81526020600482015260136024820152721c985b991bdb509e5d195cce8819985a5b1959606a1b6044820152606490fd5b8051600210156102335760220190565b8051600110156102335760210190565b8051600310156102335760230190565b8051600410156102335760240190565b908151811015610233570160200190565b90611889610e44565b916008815110611a3b576001600160f81b0319600360fc1b816118bc6118ae8561132c565b516001600160f81b03191690565b1603611a3b57600160f91b80826118d56118ae8661182f565b1603611a3b576118f96118f36118ed6118ae8661183f565b60f81c90565b60ff1690565b9161190c6118f36118ed6118ae8761184f565b9260218411611a3b5761191e84610ef9565b9061193a6118f36118ed6118ae61193486610f07565b8a61186f565b9360218511611a3b576119606119536118ae858a61186f565b6001600160f81b03191690565b03611a3b57806119786119738688610f31565b610f15565b03611a3b57611988865191610f23565b03611a3b5761199690610f23565b9060049060218514611a4d575b60218414611a08575b509060208092860101519401015191602081106119f1575b50602081106119d9575b509083526020830152565b6119e56119ea91610ea1565b610ebc565b1c386119ce565b6119e5611a0091949294610ea1565b1c91386119c4565b611a186118ae848896949661186f565b16611a3b576020611a32611a2c8294610f07565b92610e92565b939192506119ac565b6040516386cd05c560e01b8152600490fd5b80949150611a5d6118ae8761185f565b16611a3b57611a6d600591610e92565b936119a3565b6040513d6000823e3d90fd5b916040810190601b825280519260208201906020611abb835160405197848960609194939260808201958252601b602083015260408201520152565b866000978892838052039060015afa15611b5a5784516001600160a01b039687169616869003611aee575b505050505050565b611b208593601c602096525192516040519384938460609194939260808201958252601c602083015260408201520152565b838052039060015afa15611b5a57516001600160a01b031603611b4857388080808080611ae6565b604051634532600d60e01b8152600490fd5b611a73565b90604051611b7a816111626020956020830160209181520190565b6000926000905b808210611be2575b50611b9b611b9682610ea1565b611f28565b9160005b8351811015611bd457600190611bc16118ae611bba86611f5a565b958561186f565b871a611bcd828761186f565b5301611b9f565b505050610165919250611c33565b90611bf36119536118ae838661186f565b611c005760010190611b81565b90611b89565b61016590604051906bffffffffffffffffffffffff199060601b16602082015260148152611c3381610b81565b90600091805192600193600181149081611d88575b5015611c5357509150565b8151936038851015611cb757509261116261016592611cb19495611c94611c8460ff611c7d611ef6565b9616611f9b565b60f81b6001600160f81b03191690565b901a611c9f8461132c565b535b60405194859360208501906112d1565b906112d1565b9091908290600190805b611d58575b5050611cd4611b9682610f07565b92611cec611c84611ce760ff8516611f9b565b611f89565b811a611cf78561132c565b5360015b82811115611d1957505050611cb19293509061116261016592611ca1565b80611d41611c846118f36118f3611d3b611d36611d53978a610eaf565b611fbf565b8c611f69565b831a611d4d828861186f565b53611f5a565b611cfb565b9091611d648388611f69565b15611d8257611d75611d7b91611f5a565b92610ed4565b9080611cc1565b91611cc6565b905015610233576080602083015160f81c1038611c48565b611da990611fce565b805160006038821015611e1a5750602061016591611dd4611c8460ff611dcd611ef6565b9316611fad565b60001a611de08261132c565b535b6040519381611dfa869351809286808701910161010c565b8201611e0e8251809386808501910161010c565b01038084520182610bb7565b909260019290915b611e2c8486611f69565b15611e4957611e3d611e4391611f5a565b93610ed4565b92611e22565b909250929092611e5b611b9682610f07565b91611e6e611c84611ce760ff8516611fad565b60001a611e7a8461132c565b5360015b82811115611e9457505050602061016591611de2565b80611eb7611c846118f36118f3611eb1611d36611ec4978a610eaf565b87611f69565b60001a611d4d828761186f565b611e7e565b6040519160208301918252604083015260408252611ee682610b46565b905190206001600160a01b031690565b60405190611f0382610b81565b6001825260203681840137565b604051611f1c81610b9c565b60008152906000368137565b90611f3282610bfb565b611f3f6040519182610bb7565b8281528092611f50601f1991610bfb565b0190602036910137565b6000198114610e8d5760010190565b8115611f73570490565b634e487b7160e01b600052601260045260246000fd5b60ff60379116019060ff8211610e8d57565b60ff60809116019060ff8211610e8d57565b60ff60c09116019060ff8211610e8d57565b601f8111610e8d576101000a90565b80511561205d5790600091825b815184101561200457611ffc600191611ff486856113bb565b515190610f31565b930192611fdb565b61201091929350611f28565b906020808301936000945b83518610156120555761204d60019161204361203789886113bb565b51868151910183612066565b611ff488876113bb565b95019461201b565b509350505090565b50610165611f10565b92905b60209384841061209e5781518152848101809111610e8d57938101809111610e8d5791601f198101908111610e8d5791612069565b9290919350600019906020036101000a019081199051169082511617905256fe405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acea2646970667358221220892c8efb500add416fc67a306289353d46b96a7dd52099aa29f5d3d880036afb64736f6c63430008160033";

type AccountEVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountEVMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountEVM__factory extends ContractFactory {
  constructor(...args: AccountEVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AccountEVM & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AccountEVM__factory {
    return super.connect(runner) as AccountEVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountEVMInterface {
    return new Interface(_abi) as AccountEVMInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AccountEVM {
    return new Contract(address, _abi, runner) as unknown as AccountEVM;
  }
}
