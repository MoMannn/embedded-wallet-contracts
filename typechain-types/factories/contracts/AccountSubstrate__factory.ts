/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AccountSubstrate,
  AccountSubstrateInterface,
} from "../../contracts/AccountSubstrate";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "publicAddress",
        type: "bytes32",
      },
    ],
    name: "WalletCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
    ],
    name: "call",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "createWallet",
    outputs: [
      {
        internalType: "bytes32",
        name: "publicAddress",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "exportPrivateKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWalletList",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialController",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "modifyController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "removeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "sign",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
    ],
    name: "staticcall",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "walletAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461002357600160ff196000541617600055610e9f90816100298239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80631b8b921d146100d75780631d647605146100d2578063260558a0146100cd5780632cc0b254146100c857806337022e98146100c35780637d1f3b6f146100be57806388196f68146100b95780639b3d270a146100b4578063a9059cbb146100af578063b429afeb146100aa578063d04731d4146100a55763fc9ffe02146100a057600080fd5b6107e7565b610725565b6106e6565b610652565b6105cd565b6104d8565b61044a565b61039e565b6102da565b610291565b610226565b6101b0565b600435906001600160a01b03821682036100f257565b600080fd5b60406003198201126100f2576004356001600160a01b03811681036100f2579160243567ffffffffffffffff928382116100f257806023830112156100f25781600401359384116100f257602484830101116100f2576024019190565b60005b8381106101675750506000910152565b8181015183820152602001610157565b9060209161019081518092818552858086019101610154565b601f01601f1916010190565b9060206101ad928181520190610177565b90565b346100f2576101be366100f7565b9160009283809333825260016020526101e2600160ff60408520541615151461087c565b826040519384928337810182815203925af16101fc6108df565b901561021e5761021a90604051918291602083526020830190610177565b0390f35b602081519101fd5b346100f25760203660031901126100f257336000526001602052610256600160ff6040600020541615151461087c565b6020610263600435610af9565b60405190807ff881aa008a081a5e5774e6162db04235bef4d185781a42ed861bb0a74969b9b7600080a28152f35b346100f2576000806102a2366100f7565b9033845260016020526102c0600160ff60408720541615151461087c565b816040519283928337810184815203915afa6101fc6108df565b346100f25760403660031901126100f2576102f36100dc565b60009060ff825416610364576001600160a01b031681526001602081905260408220805460ff1916909117905561032b602435610af9565b7ff881aa008a081a5e5774e6162db04235bef4d185781a42ed861bb0a74969b9b78280a2610361600160ff196000541617600055565b80f35b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e525b9a5d1a585b1a5e995960721b6044820152606490fd5b346100f25760403660031901126100f2576103b76100dc565b60243580151581036100f25760009133835260016020526103e3600160ff60408620541615151461087c565b6001600160a01b0316908115610413576103619183526001602052604083209060ff801983541691151516179055565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b346100f25760203660031901126100f25760043533600052600160205261047d600160ff6040600020541615151461087c565b600254811061048b8161090f565b156104d3576002600052600080516020610e4a83398151915201546104b1811515610965565b600052600360205261021a604060002054604051918291829190602083019252565b61094f565b346100f25760203660031901126100f25760043533600052600160205261050b600160ff6040600020541615151461087c565b60025481106105198161090f565b156104d35761021a906002600052600080516020610e4a8339815191520154610543811515610965565b60026000526040519081529081906020820190565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761058a57604052565b610558565b90601f8019910116810190811067ffffffffffffffff82111761058a57604052565b67ffffffffffffffff811161058a57601f01601f191660200190565b346100f25760403660031901126100f25760243567ffffffffffffffff81116100f257366023820112156100f25780600401359061060a826105b1565b610617604051918261058f565b82815236602484840101116100f257600060208461021a956024610646960183860137830101526004356109a2565b6040519182918261019c565b346100f25760403660031901126100f25761066b6100dc565b60008080808094338252600160205261068f600160ff60408520541615151461087c565b602435906001600160a01b03165af16106a66108df565b50156106af5780f35b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b346100f25760203660031901126100f2576001600160a01b036107076100dc565b166000526001602052602060ff604060002054166040519015158152f35b346100f25760203660031901126100f2576004356000903382526001602052610759600160ff60408520541615151461087c565b60025481106107678161090f565b156104d3576002825280600080516020610e4a8339815191520190815461078f811515610965565b8352600360205282604081205560025411156104d35781905580f35b602090602060408183019282815285518094520193019160005b8281106107d3575050505090565b8351855293810193928101926001016107c5565b346100f257600080600319360112610879573381526001602091600160205261081b600160ff60408420541615151461087c565b6040519182602060025491828152019460028452600080516020610e4a83398151915293905b8282106108645761021a86610858818a038261058f565b604051918291826107ab565b84548752958601959383019390830190610841565b80fd5b1561088357565b60405162461bcd60e51b815260206004820152601060248201526f27b7363ca13ca1b7b73a3937b63632b960811b6044820152606490fd5b604051906020820182811067ffffffffffffffff82111761058a5760405260008252565b3d1561090a573d906108f0826105b1565b916108fe604051938461058f565b82523d6000602084013e565b606090565b1561091657565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081dd85b1b195d081a59607a1b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b1561096c57565b60405162461bcd60e51b815260206004820152600e60248201526d15d85b1b195d081c995b5bdd995960921b6044820152606490fd5b903360005260016020526109c2600160ff6040600020541615151461087c565b60025482106109d08161090f565b156104d3576101ad916002600052600080516020610e4a83398151915201546109fa811515610965565b6000526003602052610a2660406000205460405190602082015260208152610a218161056e565b610c2d565b6040519150610a348261056e565b600982526873756273747261746560b81b6020830152610d12565b602081519101519060208110610a63575090565b6000199060200360031b1b1690565b15610a7957565b60405162461bcd60e51b815260206004820152601760248201527f57616c6c657420616c726561647920696d706f727465640000000000000000006044820152606490fd5b6002546801000000000000000081101561058a5760018101806002558110156104d3576002600052600080516020610e4a8339815191520155565b60646002541015610ba65780610b745750610b1a610b156108bb565b610dca565b610b35610b2f610b2983610c2d565b50610a4f565b91610a4f565b610b53610b4c836000526003602052604060002090565b5415610a72565b610b5c82610abe565b610b70826000526003602052604060002090565b5590565b610ba0610b29604051610a2181610b92866020830160209181520190565b03601f19810183528261058f565b90610b35565b60405162461bcd60e51b815260206004820152601b60248201527f4d6178203130302077616c6c65747320706572206163636f756e7400000000006044820152606490fd5b81601f820112156100f2578051610c01816105b1565b92610c0f604051948561058f565b818452602082840101116100f2576101ad9160208085019101610154565b906040908151602090610c5481610b92848201976006895287808401526060830190610177565b51600094859182916005600160981b015afa90610c6f6108df565b9115610ccf5781518201918481838501940312610ccb57818101519067ffffffffffffffff91828111610cc7578484610caa92840101610beb565b95810151918211610cc3576101ad949596500101610beb565b8680fd5b8780fd5b8580fd5b60649084519062461bcd60e51b82526004820152601b60248201527f67656e207369676e696e67206b6579706169723a206661696c656400000000006044820152fd5b610d6d610d79600094938594604051938491610d5d610d4a6020850198610d398a60069052565b6080604087015260a0860190610177565b601f199586868303016060870152610177565b9084848303016080850152610177565b0390810183528261058f565b51906006600160981b015afa610d8d6108df565b9015610d965790565b60405162461bcd60e51b815260206004820152600c60248201526b1cda59db8e8819985a5b195960a21b6044820152606490fd5b60008091604051610df181610b926020820194602086526040808401526060830190610177565b51906001600160981b015afa610e056108df565b9015610e0e5790565b60405162461bcd60e51b81526020600482015260136024820152721c985b991bdb509e5d195cce8819985a5b1959606a1b6044820152606490fdfe405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acea26469706673582212202a84fd18c285be3d18b0dbe0ddc2bdf1d19d4a2a582248b51d4d1dbdf848f3d564736f6c63430008160033";

type AccountSubstrateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountSubstrateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountSubstrate__factory extends ContractFactory {
  constructor(...args: AccountSubstrateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AccountSubstrate & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AccountSubstrate__factory {
    return super.connect(runner) as AccountSubstrate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountSubstrateInterface {
    return new Interface(_abi) as AccountSubstrateInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AccountSubstrate {
    return new Contract(address, _abi, runner) as unknown as AccountSubstrate;
  }
}
