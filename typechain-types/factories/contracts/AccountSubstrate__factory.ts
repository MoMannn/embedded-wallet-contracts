/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AccountSubstrate,
  AccountSubstrateInterface,
} from "../../contracts/AccountSubstrate";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
    ],
    name: "call",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "createWallet",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "exportPrivateKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWalletList",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialController",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "modifyController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "removeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "sign",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
    ],
    name: "staticcall",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "walletAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461005f578067e94f4bc91a266480602061002593015260208152610064565b61004260405167e16cb04dafcdbf87602082015260208152610064565b600160ff1960005416176000556040516121259081620000968239f35b600080fd5b604081019081106001600160401b0382111761007f57604052565b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c80631b8b921d146100d75780631d647605146100d2578063260558a0146100cd5780632cc0b254146100c857806337022e98146100c35780637d1f3b6f146100be57806388196f68146100b95780639b3d270a146100b4578063a9059cbb146100af578063b429afeb146100aa578063d04731d4146100a55763fc9ffe02146100a057600080fd5b610a3a565b6109bd565b610930565b6108e5565b610860565b6107aa565b610769565b610634565b61046e565b610430565b610309565b6101b0565b600435906001600160a01b03821682036100f257565b600080fd5b60406003198201126100f2576004356001600160a01b03811681036100f2579160243567ffffffffffffffff928382116100f257806023830112156100f25781600401359384116100f257602484830101116100f2576024019190565b60005b8381106101675750506000910152565b8181015183820152602001610157565b9060209161019081518092818552858086019101610154565b601f01601f1916010190565b9060206101ad928181520190610177565b90565b346100f2576103056102fa6101c4366100f7565b90604093926102f585516101e9602091679bb8c72b576c2b8583820152828152610801565b6102ea87519161021a8361020b83820190670fed34da0b0dc6a3602083019252565b03601f19948582018152610822565b6102448951806102388482019067e95f0538dd5ef376602083019252565b03908582018152610822565b610262895180610238848201906772d0c7d7d9f0e503602083019252565b6102808951806102388482019067b11f8fc2daaf1230602083019252565b6102b360016102ab6102a43360018060a01b03166000526001602052604060002090565b5460ff1690565b151514610a83565b6102d189518061023884820190674b03511f72331b98602083019252565b88519182918201906771e8eafb6de39419602083019252565b039182018152610822565b610ac2565b90519182918261019c565b0390f35b346100f2576020806003193601126100f2576103059061041660409161033f83516731fa636c22503a8283820152828152610801565b6102ea8351916103618361020b83820190670fed34da0b0dc6a3602083019252565b61037f8551806102388482019067e95f0538dd5ef376602083019252565b61039d855180610238848201906772d0c7d7d9f0e503602083019252565b6103bb8551806102388482019067b11f8fc2daaf1230602083019252565b6103df60016102ab6102a43360018060a01b03166000526001602052604060002090565b6103fd85518061023884820190674b03511f72331b98602083019252565b84519182918201906771e8eafb6de39419602083019252565b610421600435610c27565b90519081529081906020820190565b346100f2576103056102fa610444366100f7565b906040939261046985516101e960209167c38ffa132229ebd783820152828152610801565b610c9f565b346100f2576040806003193601126100f257610616906102ea61048f6100dc565b8251926105aa61059d6020936104c6876104b78782019067ef6281f0ad9128a4602083019252565b03601f19988982018152610822565b6104f08451806104e48882019067c4149cb4dd2afe79602083019252565b03908982018152610822565b61050e8451806104e48882019067bbc0a320e7ec61f6602083019252565b61052c8451806104e488820190678303f9c9c80f3d7b602083019252565b61054761054261053e60005460ff1690565b1590565b610d77565b6105658451806104e4888201906732c51b8a7445eb28602083019252565b6105838451806104e488820190678ed2aa5676de2bb0602083019252565b6001600160a01b0316600090815260016020526040902090565b805460ff19166001179055565b6105d48151806105c88582019067ca58e5fe9bac12d5602083019252565b03908682018152610822565b6105f28151806105c8858201906758751800e6300223602083019252565b6105fd6024356118ee565b5051918291820190672e927e4e03dae6fb602083019252565b610628600160ff196000541617600055565b005b801515036100f257565b346100f2576040806003193601126100f257610628906106526100dc565b610764602435926106628461062a565b6102ea815161068260209167e23f78e076f70cde83820152828152610801565b8251926106b0846106a184820190670fed34da0b0dc6a3602083019252565b03601f19958682018152610822565b6106ce8151806105c88582019067e95f0538dd5ef376602083019252565b6106ec8151806105c8858201906772d0c7d7d9f0e503602083019252565b61070a8151806105c88582019067b11f8fc2daaf1230602083019252565b61072e60016102ab6102a43360018060a01b03166000526001602052604060002090565b61074c8151806105c885820190674b03511f72331b98602083019252565b519182918201906771e8eafb6de39419602083019252565b610db8565b346100f2576020806003193601126100f2576103059061079f60409161033f835167406b6dfb200371c883820152828152610801565b610421600435610e31565b346100f2576020806003193601126100f257610305906107e060409161033f83516738d7a3a9f6a2fc1283820152828152610801565b610421600435611131565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761081d57604052565b6107eb565b90601f8019910116810190811067ffffffffffffffff82111761081d57604052565b67ffffffffffffffff811161081d57601f01601f191660200190565b346100f25760403660031901126100f25760243567ffffffffffffffff81116100f257366023820112156100f25780600401359061089d82610844565b6108aa6040519182610822565b82815236602484840101116100f25760006020846103059560246108d9960183860137830101526004356111e7565b6040519182918261019c565b346100f2576040806003193601126100f257610628906109276109066100dc565b916102ea815161068260209167cadc12b9d9a635de83820152828152610801565b602435906114d9565b346100f2576020806003193601126100f25761094a6100dc565b610965604051677a7eb3e5c9e289fe84820152838152610801565b610980604051674ea13985a513d0e984820152838152610801565b61099b604051672689dbaeda259a2884820152838152610801565b60018060a01b03166000526001815260ff604060002054166040519015158152f35b346100f2576020806003193601126100f2576109f3906102ea604091610682835167d64070a65f0c159a83820152828152610801565b610628600435611580565b602090602060408183019282815285518094520193019160005b828110610a26575050505090565b835185529381019392810192600101610a18565b346100f25760003660031901126100f2576103056040610a70815161033f602091672242cecdc1646d6383820152828152610801565b610a7861170b565b9051918291826109fe565b15610a8a57565b60405162461bcd60e51b815260206004820152601060248201526f27b7363ca13ca1b7b73a3937b63632b960811b6044820152606490fd5b9190610bb6600080604095865195610aeb602097677e551394443accb789820152888152610801565b82885196610b1a88610b0b8b820190673ca8a0349dcb8266602083019252565b03601f19998a82018152610822565b610b448a5180610b388c820190679dc19ebbfd0f549d602083019252565b03908a82018152610822565b610b628a5180610b388c8201906774a010ff64fc9f29602083019252565b610b808a5180610b388c82019067efdc4c1bd43e3faa602083019252565b610b8e8a5180948193610bc5565b03925af191610b9b610bf7565b9451806102ea8682019067757aacd25c40f12d602083019252565b15610bbf575090565b81519101fd5b908092918237016000815290565b604051906020820182811067ffffffffffffffff82111761081d5760405260008252565b3d15610c22573d90610c0882610844565b91610c166040519384610822565b82523d6000602084013e565b606090565b6101ad90610c9a604051610c4c602091677a2de7428b517f3983820152828152610801565b610c67604051678fc52d68bbef384f83820152828152610801565b610c8260405167975b7b62b38994b283820152828152610801565b604051906716e78e0493f822be818301528152610801565b6118ee565b9190610bb6600080604095865195610cc860209767025515b9ff76664e89820152888152610801565b875195610ce7876104b78a820190679b39452a0974711e602083019252565b610d058951806104e48b82019067f1aa681ac74ee0c2602083019252565b610d238951806104e48b8201906762aea366c3e09171602083019252565b610d418951806104e48b82019067e3ca14013d0d68e0602083019252565b610d4f895180938193610bc5565b03915afa91610d5c610bf7565b9451806102ea86820190671ea6bfa1b348712d602083019252565b15610d7e57565b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e525b9a5d1a585b1a5e995960721b6044820152606490fd5b60019060405190610dda60209267b508fa4a58d995be84820152838152610801565b610df5604051671ee4e93bfb5dd15d84820152838152610801565b610e10604051676fa1c0281ddedc7984820152838152610801565b828060a01b03166000525260406000209060ff801983541691151516179055565b6101ad90610fc760406102ea8151610e5a602091673e264c09cdcd4fed83820152828152610801565b610e748351678a3e349d931fdf1183820152828152610801565b825192610e93846106a18482019067463bfd8ba846fd71602083019252565b610eb08151806105c8858201906626f55d9b4bbeae602083019252565b610ece8151806105c885820190678bd86de95f80bb67602083019252565b610eec8151806105c88582019067a7ef08a3a59b1c7c602083019252565b610ef96002548710610fcc565b610f178151806105c8858201906773d66d1414dc0590602083019252565b610f358151806105c88582019067596e26132cda08b9602083019252565b610f538151806105c885820190674e25b1fd29139892602083019252565b610f718151806105c8858201906704c74ccb89f8f123602083019252565b610f91610f8a610f8088611022565b90549060031b1c90565b151561105e565b610faf8151806105c88582019067dcbdd90a322da926602083019252565b519182918201906712f3978ac23bfd6b602083019252565b61109b565b15610fd357565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081dd85b1b195d081a59607a1b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b6002548110156110595760026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b61100c565b1561106557565b60405162461bcd60e51b815260206004820152600e60248201526d15d85b1b195d081c995b5bdd995960921b6044820152606490fd5b61111661112d916111116040516110c36020916783fddda4a2c83d8f83820152828152610801565b6110de60405167afabe1f62bf8302883820152828152610801565b6110f9604051670ec6308f5e74015283820152828152610801565b6040519067052d8ba9e49a237e818301528152610801565b611022565b90549060031b1c6000526003602052604060002090565b5490565b6101ad9061117460406102ea815161115a602091675fc8ef4f4854d22b83820152828152610801565b610e74835167dbf76b672067d61483820152828152610801565b610f809061111160405161119960209167904033e07f26a30183820152828152610801565b6111b4604051673c16e21b7cda308883820152828152610801565b6111cf6040516764bf5ea3123977d983820152828152610801565b6040519067939bc184befe9936818301528152610801565b906101ad9161121160406102ea81516106826020916781a4e45a988d318c83820152828152610801565b906101ad9161125560406102ea815161123b602091677a3ee90401a0351b83820152828152610801565b610e74835167c4fcedafff58df7183820152828152610801565b60409081519160209283810167f589cf804f8acdea905283815261127890610801565b80519182848101611293670a62452805cc3c92602083019252565b0392601f199384810182526112a791610822565b8151808581016112c167b65f6f0fce88b5f9602083019252565b0384810182526112d091610822565b8151808581016112ea67b23e065b56564e0c602083019252565b0384810182526112f991610822565b61130290611022565b905460039190911b1c61131f906000526003602052604060002090565b54815184810191825290819060200103838101825261133e9082610822565b8151808581016113586709565ac1e4176ea4602083019252565b03848101825261136791610822565b81518085810161138167d175123d848bf28d602083019252565b03848101825261139091610822565b61139990611dc0565b8251808681016113b367568b01c5acc8a376602083019252565b0385810182526113c291610822565b8251808681016113dc67ab2f60f0fa4cf451602083019252565b0385810182526113eb91610822565b856113f46114b4565b6113fd92611eb3565b809583518087810161141967b88a63bfbe488cc0602083019252565b03868101825261142891610822565b835180878101611442673bb320cc2e41e664602083019252565b03868101825261145191610822565b6114596114b4565b61146293611f80565b5080518084810161147d67ae752ba1737b2f72602083019252565b03838101825261148c91610822565b51809281016114a567cc3855ca675157f4602083019252565b0390810182526101ad91610822565b604051906114c182610801565b600982526873756273747261746560b81b6020830152565b6000808093819361154f604051611501602091672c43805519d4e1a183820152828152610801565b61151c6040516736cc3b160b6920f883820152828152610801565b61153760405167e4a16a371faac29983820152828152610801565b6040519067e79068cb42b0b1e5818301528152610801565b82908215611576575b6001600160a01b031690f11561156a57565b6040513d6000823e3d90fd5b6108fc9150611558565b6115c8906115c360406102ea81516115a96020916760b6f24eeb9d1e9d83820152828152610801565b610e74835167387127ca43724cb283820152828152610801565b6115ca565b565b611703906102ea60408051906115f16020926732b8eadcb3f96eb984820152838152610801565b6116cd6116bc825195611616876104b787820190679b15f432eadbc3e5602083019252565b6116348451806104e48882019067b9832db1885e705d602083019252565b6116528451806104e4888201906729431cbd95982618602083019252565b600061169d611663610f8084611022565b61168d8751806116818b82019067f5ea08e1f2898b5a602083019252565b03908c82018152610822565b6000526003602052604060002090565b556111118451806104e488820190674112bf09232c9dde602083019252565b8154906000199060031b1b19169055565b6116eb8151806105c885820190677afeded13471c655602083019252565b51918291820190677c9958f0a2702d5b602083019252565b6115c8612053565b60405161172960209167eb50f593020a867483820152828152610801565b611744604051671de19b106abb310583820152828152610801565b61175f6040516752cdb0331923f53a83820152828152610801565b61177a6040516777795079c390a03683820152828152610801565b604051908180928260025491828152019060026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace936000905b8282106117cc575050506101ad92500382610822565b8554845260019586019587955093810193909101906117b6565b156117ed57565b60405162461bcd60e51b815260206004820152601b60248201527f4d6178203130302077616c6c65747320706572206163636f756e7400000000006044820152606490fd5b602081519101519060208110611846575090565b6000199060200360031b1b1690565b1561185c57565b60405162461bcd60e51b815260206004820152601760248201527f57616c6c657420616c726561647920696d706f727465640000000000000000006044820152606490fd5b6002546801000000000000000081101561081d5760018101806002558110156110595760026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0155565b6040805160209261192082611911868201906797735ec1aef4de9d602083019252565b03601f19938482018152610822565b61194a83518061193e8782019067924680b3db06849a602083019252565b03908482018152610822565b61196883518061193e878201906788a64dd6427ba0e0602083019252565b61198683518061193e87820190671eb90b1927a429ff602083019252565b6119946064600254106117e6565b6119b283518061193e8782019067a7ad2d5a4dcbbe5d602083019252565b6119d083518061193e87820190679108218c812f5447602083019252565b6119ee83518061193e878201906798e6eec263508ade602083019252565b611a0c83518061193e8782019067bbec6d1b49e4aabf602083019252565b611a2a83518061193e87820190677e15219500ab1da0602083019252565b80611c8d57506102ea8293611a566101ad945180610238848201906721f78cc00d120db2602083019252565b611a748551806102388482019067cc639be612da4f50602083019252565b611a9285518061023884820190673c18e48c5aa71f9a602083019252565b611aa2611a9d610bd3565b612070565b94611ac18151806105c8858201906720622cfd41d6d3c0602083019252565b611adf8151806105c88582019067d88eaf4af87a666c602083019252565b611b3d611b12611aee88611dc0565b50611b0d8451806104e4888201906743e2734e56bdfdc5602083019252565b611832565b96611b0d835180611b31878201906738e6050c0147b0a3602083019252565b03908882018152610822565b611b67825180611b5b8682019067872930033422c88c602083019252565b03908782018152610822565b611b85825180611b5b8682019067bb98ac2a2b7f9863602083019252565b611ba3825180611b5b8682019067457978077aabb1c4602083019252565b611bc1611bba886000526003602052604060002090565b5415611855565b611bdf825180611b5b8682019067e43c104ecad46932602083019252565b611bfd825180611b5b8682019067716186948c354a15602083019252565b611c1b825180611b5b86820190674c985957e4e88e62602083019252565b611c24876118a1565b611c42825180611b5b868201906735cf31aab2720c5e602083019252565b611c56876000526003602052604060002090565b55611c758151806105c88582019067ef42a409229ad0c4602083019252565b519182918201906743ddb97e096b68e4602083019252565b926102ea9083611cb46101ad9551806105c885820190674f532f6ef40888c1602083019252565b611cd28151806105c88582019067f769ef15a4f5d986602083019252565b611cf08151806105c885820190676df9d5778be60b99602083019252565b611d78611d598251611d1881611d0c8b88830160209181520190565b03888101835282610822565b611d368451806104e488820190670ae8193293356ffc602083019252565b611d548451806104e48882019067ed577de7c7a3eebb602083019252565b611dc0565b50611b0d835180611b318782019067acd25a9198b9a29d602083019252565b95611b3d565b81601f820112156100f2578051611d9481610844565b92611da26040519485610822565b818452602082840101116100f2576101ad9160208085019101610154565b906040908151602090611df581611de7848201976006895287808401526060830190610177565b03601f198101835282610822565b51600094859182916005600160981b015afa90611e10610bf7565b9115611e705781518201918481838501940312611e6c57818101519067ffffffffffffffff91828111611e68578484611e4b92840101611d7e565b95810151918211611e64576101ad949596500101611d7e565b8680fd5b8780fd5b8580fd5b60649084519062461bcd60e51b82526004820152601b60248201527f67656e207369676e696e67206b6579706169723a206661696c656400000000006044820152fd5b611f0e611f1a600094938594604051938491611efe611eeb6020850198611eda8a60069052565b6080604087015260a0860190610177565b601f199586868303016060870152610177565b9084848303016080850152610177565b03908101835282610822565b51906006600160981b015afa611f2e610bf7565b9015611f375790565b60405162461bcd60e51b815260206004820152600c60248201526b1cda59db8e8819985a5b195960a21b6044820152606490fd5b908160209103126100f257516101ad8161062a565b90611ff0611fe09160009594611f0e8796604051958693611fd0611fbd602087019a611fac8c60069052565b60a0604089015260c0880190610177565b601f199788888303016060890152610177565b9086868303016080870152610177565b90848483030160a0850152610177565b51906007600160981b015afa612004610bf7565b901561201d57806020806101ad93518301019101611f6b565b60405162461bcd60e51b815260206004820152600e60248201526d1d995c9a599e4e8819985a5b195960921b6044820152606490fd5b6115c860405167cf76f81ba92cdcf1602082015260208152610801565b6000809160405161209781611de76020820194602086526040808401526060830190610177565b51906001600160981b015afa6120ab610bf7565b90156120b45790565b60405162461bcd60e51b81526020600482015260136024820152721c985b991bdb509e5d195cce8819985a5b1959606a1b6044820152606490fdfea2646970667358221220d6d05b4a88706bf279fd5bcdb56957bf21fd63866f8f2142274f59877709a29b64736f6c63430008160033";

type AccountSubstrateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountSubstrateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountSubstrate__factory extends ContractFactory {
  constructor(...args: AccountSubstrateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AccountSubstrate & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AccountSubstrate__factory {
    return super.connect(runner) as AccountSubstrate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountSubstrateInterface {
    return new Interface(_abi) as AccountSubstrateInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AccountSubstrate {
    return new Contract(address, _abi, runner) as unknown as AccountSubstrate;
  }
}
