/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AccountSubstrate,
  AccountSubstrateInterface,
} from "../../contracts/AccountSubstrate";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "publicAddress",
        type: "bytes32",
      },
    ],
    name: "WalletCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_b",
        type: "bytes32",
      },
    ],
    name: "bytes32ToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "call",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "createWallet",
    outputs: [
      {
        internalType: "bytes32",
        name: "publicAddress",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "exportPrivateKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWalletList",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialController",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "modifyController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "removeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "sign",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "staticcall",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "walletAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461002357600160ff1960005416176000556110cd90816100298239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8063095bcdb6146100e75780631d647605146100e25780632cc0b254146100dd5780635ced058e146100d85780635dc7c784146100d3578063873ad0ac146100ce57806388196f68146100c95780638a256d19146100c45780639b3d270a146100bf578063b429afeb146100ba578063bfa3ee2a146100b5578063d04731d4146100b05763fc9ffe02146100ab57600080fd5b6108e3565b610821565b61078b565b61074c565b6106d3565b61059e565b61051e565b610448565b610305565b6102de565b61021a565b6101af565b610107565b600435906001600160a01b038216820361010257565b600080fd5b34610102576060366003190112610102576101206100ec565b60443590336000526001602052600160ff6040600020541615151491821561015b575b506101506101599261098e565b60243590610a27565b005b91506002548210156101aa576101506101a1610195610159946002600052600080516020611078833981519152015460018060a01b031690565b6001600160a01b031690565b33149250610143565b610978565b34610102576020366003190112610102573360005260016020526101df600160ff60406000205416151514610a82565b60206101ec600435610d27565b60405190807ff881aa008a081a5e5774e6162db04235bef4d185781a42ed861bb0a74969b9b7600080a28152f35b34610102576040366003190112610102576102336100ec565b60009060ff8254166102a4576001600160a01b031681526001602081905260408220805460ff1916909117905561026b602435610d27565b7ff881aa008a081a5e5774e6162db04235bef4d185781a42ed861bb0a74969b9b78280a26102a1600160ff196000541617600055565b80f35b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e525b9a5d1a585b1a5e995960721b6044820152606490fd5b34610102576020366003190112610102576040516004356001600160a01b03168152602090f35b346101025760603660031901126101025761031e6100ec565b602435801515810361010257600091338352600160205261034a600160ff604086205416151514610a82565b6001600160a01b0316908115610387576102a19161036b4260443511610ac1565b83526001602052604083209060ff801983541691151516179055565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b9181601f840112156101025782359167ffffffffffffffff8311610102576020838186019501011161010257565b60005b8381106103ff5750506000910152565b81810151838201526020016103ef565b90602091610428815180928185528580860191016103ec565b601f01601f1916010190565b90602061044592818152019061040f565b90565b34610102576080366003190112610102576104616100ec565b60243567ffffffffffffffff8111610102576104819036906004016103be565b606492919235336000526001602052600160ff604060002054161515149081156104d1575b6104cd6104c18585886104b88761098e565b60443592610b00565b60405191829182610434565b0390f35b929190506002548310156101aa576104cd936104b86105116101956104c1966002600052600080516020611078833981519152015460018060a01b031690565b33149293945050936104a6565b3461010257602036600319011261010257600435336000526001602052610551600160ff60406000205416151514610a82565b600254811061055f81610b33565b156101aa576104cd9060026000526000805160206110788339815191520154610589811515610b73565b60026000526040519081529081906020820190565b34610102576060366003190112610102576105b76100ec565b60243567ffffffffffffffff8111610102576105d79036906004016103be565b90604435336000526001602052600160ff60406000205416151514908115610611575b6104cd6104c185858861060c8761098e565b610bb0565b929190506002548310156101aa576104cd9361060c6106516101956104c1966002600052600080516020611078833981519152015460018060a01b031690565b33149293945050936105fa565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761069057604052565b61065e565b90601f8019910116810190811067ffffffffffffffff82111761069057604052565b67ffffffffffffffff811161069057601f01601f191660200190565b346101025760403660031901126101025760243567ffffffffffffffff8111610102573660238201121561010257806004013590610710826106b7565b61071d6040519182610695565b82815236602484840101116101025760006020846104cd9560246104c196018386013783010152600435610bd0565b34610102576020366003190112610102576001600160a01b0361076d6100ec565b166000526001602052602060ff604060002054166040519015158152f35b34610102576040366003190112610102576004353360005260016020526107be600160ff60406000205416151514610a82565b60025481106107cc81610b33565b156101aa57600260005260008051602061107883398151915201546107f2811515610b73565b6107ff4260243511610ac1565b60005260036020526104cd604060002054604051918291829190602083019252565b34610102576020366003190112610102576004356000903382526001602052610855600160ff604085205416151514610a82565b600254811061086381610b33565b156101aa5760028252806000805160206110788339815191520190815461088b811515610b73565b8352600360205282604081205560025411156101aa5781905580f35b602090602060408183019282815285518094520193019160005b8281106108cf575050505090565b8351855293810193928101926001016108c1565b34610102576000806003193601126109755733815260016020916001602052610917600160ff604084205416151514610a82565b604051918260206002549182815201946002845260008051602061107883398151915293905b828210610960576104cd86610954818a0382610695565b604051918291826108a7565b8454875295860195938301939083019061093d565b80fd5b634e487b7160e01b600052603260045260246000fd5b1561099557565b60405162461bcd60e51b815260206004820152601660248201527527b7363ca13ca1b7b73a3937b63632b927b929b2b63360511b6044820152606490fd5b604051906020820182811067ffffffffffffffff8211176106905760405260008252565b3d15610a22573d90610a08826106b7565b91610a166040519384610695565b82523d6000602084013e565b606090565b6000918291829182916001600160a01b03165af1610a436109f7565b5015610a4b57565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b15610a8957565b60405162461bcd60e51b815260206004820152601060248201526f27b7363ca13ca1b7b73a3937b63632b960811b6044820152606490fd5b15610ac857565b60405162461bcd60e51b815260206004820152601060248201526f496e76616c696420646561646c696e6560801b6044820152606490fd5b90916000938493826040519384928337810185815203925af190610b226109f7565b9115610b2a57565b50602081519101fd5b15610b3a57565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081dd85b1b195d081a59607a1b6044820152606490fd5b15610b7a57565b60405162461bcd60e51b815260206004820152600e60248201526d15d85b1b195d081c995b5bdd995960921b6044820152606490fd5b6000928392816040519283928337810184815203915afa90610b226109f7565b90336000526001602052610bf0600160ff60406000205416151514610a82565b6002548210610bfe81610b33565b156101aa576104459160026000526000805160206110788339815191520154610c28811515610b73565b6000526003602052610c5460406000205460405190602082015260208152610c4f81610674565b610e5b565b6040519150610c6282610674565b600982526873756273747261746560b81b6020830152610f40565b602081519101519060208110610c91575090565b6000199060200360031b1b1690565b15610ca757565b60405162461bcd60e51b815260206004820152601760248201527f57616c6c657420616c726561647920696d706f727465640000000000000000006044820152606490fd5b600254680100000000000000008110156106905760018101806002558110156101aa5760026000526000805160206110788339815191520155565b60646002541015610dd45780610da25750610d48610d436109d3565b610ff8565b610d63610d5d610d5783610e5b565b50610c7d565b91610c7d565b610d81610d7a836000526003602052604060002090565b5415610ca0565b610d8a82610cec565b610d9e826000526003602052604060002090565b5590565b610dce610d57604051610c4f81610dc0866020830160209181520190565b03601f198101835282610695565b90610d63565b60405162461bcd60e51b815260206004820152601b60248201527f4d6178203130302077616c6c65747320706572206163636f756e7400000000006044820152606490fd5b81601f82011215610102578051610e2f816106b7565b92610e3d6040519485610695565b818452602082840101116101025761044591602080850191016103ec565b906040908151602090610e8281610dc084820197600689528780840152606083019061040f565b51600094859182916005600160981b015afa90610e9d6109f7565b9115610efd5781518201918481838501940312610ef957818101519067ffffffffffffffff91828111610ef5578484610ed892840101610e19565b95810151918211610ef157610445949596500101610e19565b8680fd5b8780fd5b8580fd5b60649084519062461bcd60e51b82526004820152601b60248201527f67656e207369676e696e67206b6579706169723a206661696c656400000000006044820152fd5b610f9b610fa7600094938594604051938491610f8b610f786020850198610f678a60069052565b6080604087015260a086019061040f565b601f19958686830301606087015261040f565b908484830301608085015261040f565b03908101835282610695565b51906006600160981b015afa610fbb6109f7565b9015610fc45790565b60405162461bcd60e51b815260206004820152600c60248201526b1cda59db8e8819985a5b195960a21b6044820152606490fd5b6000809160405161101f81610dc0602082019460208652604080840152606083019061040f565b51906001600160981b015afa6110336109f7565b901561103c5790565b60405162461bcd60e51b81526020600482015260136024820152721c985b991bdb509e5d195cce8819985a5b1959606a1b6044820152606490fdfe405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acea2646970667358221220172553010090f4311851153b960a8e6520c6222495f71aad8e8b9db188e13bdb64736f6c63430008160033";

type AccountSubstrateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountSubstrateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountSubstrate__factory extends ContractFactory {
  constructor(...args: AccountSubstrateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AccountSubstrate & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AccountSubstrate__factory {
    return super.connect(runner) as AccountSubstrate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountSubstrateInterface {
    return new Interface(_abi) as AccountSubstrateInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AccountSubstrate {
    return new Contract(address, _abi, runner) as unknown as AccountSubstrate;
  }
}
