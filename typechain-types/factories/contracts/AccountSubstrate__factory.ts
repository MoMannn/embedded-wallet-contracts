/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AccountSubstrate,
  AccountSubstrateInterface,
} from "../../contracts/AccountSubstrate";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
    ],
    name: "call",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "createWallet",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "exportPrivateKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWalletList",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialController",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "modifyController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "removeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "sign",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
    ],
    name: "staticcall",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "walletAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461002357600160ff196000541617600055610ef690816100298239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80631b8b921d146100d75780631d647605146100d2578063260558a0146100cd5780632cc0b254146100c857806337022e98146100c35780637d1f3b6f146100be57806388196f68146100b95780639b3d270a146100b4578063a9059cbb146100af578063b429afeb146100aa578063d04731d4146100a55763fc9ffe02146100a057600080fd5b610747565b610685565b610646565b6105d2565b61054d565b610458565b6103ca565b610360565b6102b4565b61026b565b610226565b6101b0565b600435906001600160a01b03821682036100f257565b600080fd5b60406003198201126100f2576004356001600160a01b03811681036100f2579160243567ffffffffffffffff928382116100f257806023830112156100f25781600401359384116100f257602484830101116100f2576024019190565b60005b8381106101675750506000910152565b8181015183820152602001610157565b9060209161019081518092818552858086019101610154565b601f01601f1916010190565b9060206101ad928181520190610177565b90565b346100f2576101be366100f7565b9160009283809333825260016020526101e2600160ff6040852054161515146107dc565b826040519384928337810182815203925af16101fc61083f565b901561021e5761021a90604051918291602083526020830190610177565b0390f35b602081519101fd5b346100f25760203660031901126100f257336000526001602052610256600160ff604060002054161515146107dc565b6020610263600435610b20565b604051908152f35b346100f25760008061027c366100f7565b90338452600160205261029a600160ff6040872054161515146107dc565b816040519283928337810184815203915afa6101fc61083f565b346100f25760403660031901126100f2576102cd6100dc565b60ff6000541661031c5760018060a01b031660005260016020526102fc6040600020600160ff19825416179055565b610307602435610b20565b5061031a600160ff196000541617600055565b005b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e525b9a5d1a585b1a5e995960721b6044820152606490fd5b801515036100f257565b346100f25760403660031901126100f2576103796100dc565b60243561038581610356565b60009133835260016020526103a5600160ff6040862054161515146107dc565b60018060a01b031682526001602052604082209060ff80198354169115151617905580f35b346100f25760203660031901126100f2576004353360005260016020526103fd600160ff604060002054161515146107dc565b600254811061040b8161086f565b15610453576002600052600080516020610ea183398151915201546104318115156108c5565b600052600360205261021a604060002054604051918291829190602083019252565b6108af565b346100f25760203660031901126100f25760043533600052600160205261048b600160ff604060002054161515146107dc565b60025481106104998161086f565b156104535761021a906002600052600080516020610ea183398151915201546104c38115156108c5565b60026000526040519081529081906020820190565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761050a57604052565b6104d8565b90601f8019910116810190811067ffffffffffffffff82111761050a57604052565b67ffffffffffffffff811161050a57601f01601f191660200190565b346100f25760403660031901126100f25760243567ffffffffffffffff81116100f257366023820112156100f25780600401359061058a82610531565b610597604051918261050f565b82815236602484840101116100f257600060208461021a9560246105c696018386013783010152600435610902565b6040519182918261019c565b346100f25760403660031901126100f2576105eb6100dc565b6024359060008080809481943383526001602052610614600160ff6040862054161515146107dc565b8290821561063c575b6001600160a01b031690f1156106305780f35b604051903d90823e3d90fd5b6108fc915061061d565b346100f25760203660031901126100f2576001600160a01b036106676100dc565b166000526001602052602060ff604060002054166040519015158152f35b346100f25760203660031901126100f25760043560009033825260016020526106b9600160ff6040852054161515146107dc565b60025481106106c78161086f565b15610453576002825280600080516020610ea1833981519152019081546106ef8115156108c5565b8352600360205282604081205560025411156104535781905580f35b602090602060408183019282815285518094520193019160005b828110610733575050505090565b835185529381019392810192600101610725565b346100f2576000806003193601126107d9573381526001602091600160205261077b600160ff6040842054161515146107dc565b6040519182602060025491828152019460028452600080516020610ea183398151915293905b8282106107c45761021a866107b8818a038261050f565b6040519182918261070b565b845487529586019593830193908301906107a1565b80fd5b156107e357565b60405162461bcd60e51b815260206004820152601060248201526f27b7363ca13ca1b7b73a3937b63632b960811b6044820152606490fd5b604051906020820182811067ffffffffffffffff82111761050a5760405260008252565b3d1561086a573d9061085082610531565b9161085e604051938461050f565b82523d6000602084013e565b606090565b1561087657565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081dd85b1b195d081a59607a1b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b156108cc57565b60405162461bcd60e51b815260206004820152600e60248201526d15d85b1b195d081c995b5bdd995960921b6044820152606490fd5b90600091338352602060018152604093610926600160ff87842054161515146107dc565b60025483106109348161086f565b15610453576109ea9260028252600080516020610ea1833981519152015461095d8115156108c5565b81526003825280856109bb6109878284205483519087820152868152610982816104ee565b610c54565b610992979197610a51565b906109de6109ce865195869360808c8601996109ae8b60069052565b86015260a0850190610177565b601f199485858303016060860152610177565b838382030160808401528b610177565b0390810183528261050f565b51906006600160981b015afa936109ff61083f565b9415610a1f575050610a1b918391610a15610a51565b90610d4e565b5090565b60649250519062461bcd60e51b82526004820152600c60248201526b1cda59db8e8819985a5b195960a21b6044820152fd5b60405190610a5e826104ee565b600982526873756273747261746560b81b6020830152565b602081519101519060208110610a8a575090565b6000199060200360031b1b1690565b15610aa057565b60405162461bcd60e51b815260206004820152601760248201527f57616c6c657420616c726561647920696d706f727465640000000000000000006044820152606490fd5b6002546801000000000000000081101561050a576001810180600255811015610453576002600052600080516020610ea18339815191520155565b60646002541015610bcd5780610b9b5750610b41610b3c61081b565b610e21565b610b5c610b56610b5083610c54565b50610a76565b91610a76565b610b7a610b73836000526003602052604060002090565b5415610a99565b610b8382610ae5565b610b97826000526003602052604060002090565b5590565b610bc7610b5060405161098281610bb9866020830160209181520190565b03601f19810183528261050f565b90610b5c565b60405162461bcd60e51b815260206004820152601b60248201527f4d6178203130302077616c6c65747320706572206163636f756e7400000000006044820152606490fd5b81601f820112156100f2578051610c2881610531565b92610c36604051948561050f565b818452602082840101116100f2576101ad9160208085019101610154565b906040908151602090610c7b81610bb9848201976006895287808401526060830190610177565b51600094859182916005600160981b015afa90610c9661083f565b9115610cf65781518201918481838501940312610cf257818101519067ffffffffffffffff91828111610cee578484610cd192840101610c12565b95810151918211610cea576101ad949596500101610c12565b8680fd5b8780fd5b8580fd5b60649084519062461bcd60e51b82526004820152601b60248201527f67656e207369676e696e67206b6579706169723a206661696c656400000000006044820152fd5b908160209103126100f257516101ad81610356565b90610dbe610dae91600095946109de8796604051958693610d9e610d8b602087019a610d7a8c60069052565b60a0604089015260c0880190610177565b601f199788888303016060890152610177565b9086868303016080870152610177565b90848483030160a0850152610177565b51906007600160981b015afa610dd261083f565b9015610deb57806020806101ad93518301019101610d39565b60405162461bcd60e51b815260206004820152600e60248201526d1d995c9a599e4e8819985a5b195960921b6044820152606490fd5b60008091604051610e4881610bb96020820194602086526040808401526060830190610177565b51906001600160981b015afa610e5c61083f565b9015610e655790565b60405162461bcd60e51b81526020600482015260136024820152721c985b991bdb509e5d195cce8819985a5b1959606a1b6044820152606490fdfe405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acea264697066735822122080366584b0b41588853f03bbe0d006dc10c55ed1e68c91bfe32a0167aa380b0664736f6c63430008160033";

type AccountSubstrateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountSubstrateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountSubstrate__factory extends ContractFactory {
  constructor(...args: AccountSubstrateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AccountSubstrate & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AccountSubstrate__factory {
    return super.connect(runner) as AccountSubstrate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountSubstrateInterface {
    return new Interface(_abi) as AccountSubstrateInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AccountSubstrate {
    return new Contract(address, _abi, runner) as unknown as AccountSubstrate;
  }
}
