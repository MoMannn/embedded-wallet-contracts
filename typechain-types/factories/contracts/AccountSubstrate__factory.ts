/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  AccountSubstrate,
  AccountSubstrateInterface,
} from "../../contracts/AccountSubstrate";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "publicAddress",
        type: "bytes32",
      },
    ],
    name: "WalletCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
    ],
    name: "call",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "createWallet",
    outputs: [
      {
        internalType: "bytes32",
        name: "publicAddress",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "exportPrivateKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWalletList",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initialController",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "keypairSecret",
        type: "bytes32",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isController",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "modifyController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "removeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "sign",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_contract",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "in_data",
        type: "bytes",
      },
    ],
    name: "staticcall",
    outputs: [
      {
        internalType: "bytes",
        name: "out_data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "in_target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "walletId",
        type: "uint256",
      },
    ],
    name: "walletAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461002357600160ff196000541617600055610f3e90816100298239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80631b8b921d146100d75780631d647605146100d2578063260558a0146100cd5780632cc0b254146100c857806337022e98146100c35780637d1f3b6f146100be57806388196f68146100b95780639b3d270a146100b4578063a9059cbb146100af578063b429afeb146100aa578063d04731d4146100a55763fc9ffe02146100a057600080fd5b61078f565b6106cd565b61068e565b61061a565b610595565b6104a0565b610412565b6103a8565b6102da565b610291565b610226565b6101b0565b600435906001600160a01b03821682036100f257565b600080fd5b60406003198201126100f2576004356001600160a01b03811681036100f2579160243567ffffffffffffffff928382116100f257806023830112156100f25781600401359384116100f257602484830101116100f2576024019190565b60005b8381106101675750506000910152565b8181015183820152602001610157565b9060209161019081518092818552858086019101610154565b601f01601f1916010190565b9060206101ad928181520190610177565b90565b346100f2576101be366100f7565b9160009283809333825260016020526101e2600160ff604085205416151514610824565b826040519384928337810182815203925af16101fc610887565b901561021e5761021a90604051918291602083526020830190610177565b0390f35b602081519101fd5b346100f25760203660031901126100f257336000526001602052610256600160ff60406000205416151514610824565b6020610263600435610b68565b60405190807ff881aa008a081a5e5774e6162db04235bef4d185781a42ed861bb0a74969b9b7600080a28152f35b346100f2576000806102a2366100f7565b9033845260016020526102c0600160ff604087205416151514610824565b816040519283928337810184815203915afa6101fc610887565b346100f25760403660031901126100f2576102f36100dc565b60009060ff825416610364576001600160a01b031681526001602081905260408220805460ff1916909117905561032b602435610b68565b7ff881aa008a081a5e5774e6162db04235bef4d185781a42ed861bb0a74969b9b78280a2610361600160ff196000541617600055565b80f35b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e525b9a5d1a585b1a5e995960721b6044820152606490fd5b801515036100f257565b346100f25760403660031901126100f2576103c16100dc565b6024356103cd8161039e565b60009133835260016020526103ed600160ff604086205416151514610824565b60018060a01b031682526001602052604082209060ff80198354169115151617905580f35b346100f25760203660031901126100f257600435336000526001602052610445600160ff60406000205416151514610824565b6002548110610453816108b7565b1561049b576002600052600080516020610ee9833981519152015461047981151561090d565b600052600360205261021a604060002054604051918291829190602083019252565b6108f7565b346100f25760203660031901126100f2576004353360005260016020526104d3600160ff60406000205416151514610824565b60025481106104e1816108b7565b1561049b5761021a906002600052600080516020610ee9833981519152015461050b81151561090d565b60026000526040519081529081906020820190565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761055257604052565b610520565b90601f8019910116810190811067ffffffffffffffff82111761055257604052565b67ffffffffffffffff811161055257601f01601f191660200190565b346100f25760403660031901126100f25760243567ffffffffffffffff81116100f257366023820112156100f2578060040135906105d282610579565b6105df6040519182610557565b82815236602484840101116100f257600060208461021a95602461060e9601838601378301015260043561094a565b6040519182918261019c565b346100f25760403660031901126100f2576106336100dc565b602435906000808080948194338352600160205261065c600160ff604086205416151514610824565b82908215610684575b6001600160a01b031690f1156106785780f35b604051903d90823e3d90fd5b6108fc9150610665565b346100f25760203660031901126100f2576001600160a01b036106af6100dc565b166000526001602052602060ff604060002054166040519015158152f35b346100f25760203660031901126100f2576004356000903382526001602052610701600160ff604085205416151514610824565b600254811061070f816108b7565b1561049b576002825280600080516020610ee98339815191520190815461073781151561090d565b83526003602052826040812055600254111561049b5781905580f35b602090602060408183019282815285518094520193019160005b82811061077b575050505090565b83518552938101939281019260010161076d565b346100f25760008060031936011261082157338152600160209160016020526107c3600160ff604084205416151514610824565b6040519182602060025491828152019460028452600080516020610ee983398151915293905b82821061080c5761021a86610800818a0382610557565b60405191829182610753565b845487529586019593830193908301906107e9565b80fd5b1561082b57565b60405162461bcd60e51b815260206004820152601060248201526f27b7363ca13ca1b7b73a3937b63632b960811b6044820152606490fd5b604051906020820182811067ffffffffffffffff8211176105525760405260008252565b3d156108b2573d9061089882610579565b916108a66040519384610557565b82523d6000602084013e565b606090565b156108be57565b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081dd85b1b195d081a59607a1b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b1561091457565b60405162461bcd60e51b815260206004820152600e60248201526d15d85b1b195d081c995b5bdd995960921b6044820152606490fd5b9060009133835260206001815260409361096e600160ff8784205416151514610824565b600254831061097c816108b7565b1561049b57610a329260028252600080516020610ee983398151915201546109a581151561090d565b8152600382528085610a036109cf82842054835190878201528681526109ca81610536565b610c9c565b6109da979197610a99565b90610a26610a16865195869360808c8601996109f68b60069052565b86015260a0850190610177565b601f199485858303016060860152610177565b838382030160808401528b610177565b03908101835282610557565b51906006600160981b015afa93610a47610887565b9415610a67575050610a63918391610a5d610a99565b90610d96565b5090565b60649250519062461bcd60e51b82526004820152600c60248201526b1cda59db8e8819985a5b195960a21b6044820152fd5b60405190610aa682610536565b600982526873756273747261746560b81b6020830152565b602081519101519060208110610ad2575090565b6000199060200360031b1b1690565b15610ae857565b60405162461bcd60e51b815260206004820152601760248201527f57616c6c657420616c726561647920696d706f727465640000000000000000006044820152606490fd5b6002546801000000000000000081101561055257600181018060025581101561049b576002600052600080516020610ee98339815191520155565b60646002541015610c155780610be35750610b89610b84610863565b610e69565b610ba4610b9e610b9883610c9c565b50610abe565b91610abe565b610bc2610bbb836000526003602052604060002090565b5415610ae1565b610bcb82610b2d565b610bdf826000526003602052604060002090565b5590565b610c0f610b986040516109ca81610c01866020830160209181520190565b03601f198101835282610557565b90610ba4565b60405162461bcd60e51b815260206004820152601b60248201527f4d6178203130302077616c6c65747320706572206163636f756e7400000000006044820152606490fd5b81601f820112156100f2578051610c7081610579565b92610c7e6040519485610557565b818452602082840101116100f2576101ad9160208085019101610154565b906040908151602090610cc381610c01848201976006895287808401526060830190610177565b51600094859182916005600160981b015afa90610cde610887565b9115610d3e5781518201918481838501940312610d3a57818101519067ffffffffffffffff91828111610d36578484610d1992840101610c5a565b95810151918211610d32576101ad949596500101610c5a565b8680fd5b8780fd5b8580fd5b60649084519062461bcd60e51b82526004820152601b60248201527f67656e207369676e696e67206b6579706169723a206661696c656400000000006044820152fd5b908160209103126100f257516101ad8161039e565b90610e06610df69160009594610a268796604051958693610de6610dd3602087019a610dc28c60069052565b60a0604089015260c0880190610177565b601f199788888303016060890152610177565b9086868303016080870152610177565b90848483030160a0850152610177565b51906007600160981b015afa610e1a610887565b9015610e3357806020806101ad93518301019101610d81565b60405162461bcd60e51b815260206004820152600e60248201526d1d995c9a599e4e8819985a5b195960921b6044820152606490fd5b60008091604051610e9081610c016020820194602086526040808401526060830190610177565b51906001600160981b015afa610ea4610887565b9015610ead5790565b60405162461bcd60e51b81526020600482015260136024820152721c985b991bdb509e5d195cce8819985a5b1959606a1b6044820152606490fdfe405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acea2646970667358221220294cc20c77768a89d08306e8f00b7c78c95aa98128661db1ec37a1dcd4c4763c64736f6c63430008160033";

type AccountSubstrateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccountSubstrateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccountSubstrate__factory extends ContractFactory {
  constructor(...args: AccountSubstrateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AccountSubstrate & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AccountSubstrate__factory {
    return super.connect(runner) as AccountSubstrate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccountSubstrateInterface {
    return new Interface(_abi) as AccountSubstrateInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AccountSubstrate {
    return new Contract(address, _abi, runner) as unknown as AccountSubstrate;
  }
}
