/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { SHA1, SHA1Interface } from "../../../contracts/lib/SHA1";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "HMAC",
    outputs: [
      {
        internalType: "bytes20",
        name: "",
        type: "bytes20",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a57610b179081610020823930815050f35b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c636cd87a9c1461002a57600080fd5b8060031936011261056b5767ffffffffffffffff600435818111610567576100569036906004016105ac565b906024359081116105675761006f9036906004016105ac565b9082519060206100a0836100918382019067e03f2a7e7f0a3ddc602083019252565b03601f19948582018152610585565b6100ca8551806100be8482019067236fa0d5aef5445a602083019252565b03908582018152610585565b6100e88551806100be84820190677e0cc86108f1b09b602083019252565b8591610114865180610108858201906781d4b48936b7abe7602083019252565b03908682018152610585565b6101328651806101088582019067c8fe9e41719dcc39602083019252565b869261015e8751806101528682019067b05fa43fc00a3edc602083019252565b03908782018152610585565b61017c8751806101528682019067dd746e4c5917a614602083019252565b61019a87518061015286820190672b07a6e6104a366f602083019252565b6101b88751806101528682019067a5f82fb2d9345908602083019252565b868251116000146103ad57506103a996509161038361038f95949261023761022a610225966102078b51806101fb8782019067d20e5f2d86c97212602083019252565b03908982018152610585565b6102258b51806101fb8782019067fb02d1dd9b4a9490602083019252565b610722565b6001600160601b03191690565b955b6102578951806101528582019067a1086520761a743c602083019252565b6102758951806101528582019067aece4f67313096f9602083019252565b6102938951806101528582019067dad908bad21ebbbc602083019252565b6102b1895180610152858201906722b2627bc6885bcb602083019252565b6102cf8951806101528582019067fc0dc415d8e8d0ee602083019252565b6102ed8951806101528582019067603d55e2ed6445df602083019252565b6103587f5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c5c916102257f363636363636363636363636363636363636363636363636363636363636363661034c8d5193828d8b87951891188985016106af565b03888101835282610585565b8951978218928801928352931860208201526001600160601b03199092166040830152849160540190565b03908101835282610585565b90516001600160601b031990911681529081906020820190565b0390f35b9490939295966103d18851806101088682019067399b1f25da5215ec602083019252565b6103ef8851806101088682019067e640a8336b01b9c0602083019252565b61040d88518061010886820190674bcb2d163d38db8b602083019252565b945b845186108061055e575b1561049c576104969061044089518061015287820190676b22a5f99a79e37e602083019252565b61048f61047061046a6104646104568b8b610632565b516001600160f81b03191690565b60f81c90565b60ff1690565b61048961048461047f8b610659565b610675565b6106a0565b9061068d565b179561061e565b9461040f565b959450956104be8151806100be8582019067d7989d1dc6562a30602083019252565b6104dc8151806100be8582019067958180e501a51a9b602083019252565b81945b8451861080610555575b1561053b57610535906105108351806101528782019067bf4657ae7eb50788602083019252565b61048f61052661046a6104646104568b8b610632565b61048961048461047f8b610667565b946104df565b9095935061038f945061038361022593926103a998610239565b508186106104e9565b50828610610419565b8380fd5b5080fd5b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176105a757604052565b61056f565b81601f820112156106035780359067ffffffffffffffff82116105a757604051926105e1601f8401601f191660200185610585565b8284526020838301011161060357816000926020809301838601378301015290565b600080fd5b634e487b7160e01b600052601160045260246000fd5b600019811461062d5760010190565b610608565b908151811015610643570160200190565b634e487b7160e01b600052603260045260246000fd5b601f0390601f821161062d57565b603f0390603f821161062d57565b600381901b91906001600160fd1b0381160361062d57565b8181029291811591840414171561062d57565b60ff811161062d576001901b90565b91908252602090602083015282519260005b8481106106d8575050509060409101016000815290565b8181018301518482016040015282016106c1565b9291906000938282106106fe57505050565b810151929350900360208110610712575090565b6020036101000a60001901191690565b604051906107536020928061074585820190672a654b6c48d608f0602083019252565b0390601f1982018152610585565b610772604051806107458582019067a79c42d817757ff7602083019252565b60405181519167ffffffffffffffc060018401166040810190600960408683030110600114610ad6575b50776745230100efcdab890098badcfe001032547600c3d2e1f093916000925b8284106108185750505050509081901c63ffffffff60801b16601882901c63ffffffff60601b1617601082901c6bffffffff00000000000000001617600882901c67ffffffff00000000161763ffffffff919091161760601b90565b90929591939661082b82888587016106ec565b885261083c828489018587016106ec565b8389015286820360408110600114610aca575b50603f196001868201891414610ab8575b60405b60808110610a47575060805b61014081106109d65750508590600093849585935b605090818610156109a2578c6014870480156109825780600114610964578060021461094157600314610924575b8177ffffffff00ffffffff000000000000ffffffff00ffffffff91601f6001959460bb1c1663ffffffe083609b1c16178b0163ffffffff8316018c01908960021b015160e01c0160a01b9060281c1791633fffffff8360521c1663c00000008460321c1617901b911617940193610884565b63ca62c1d69950602882901c607883901c83851c181898506108b2565b50638f1bbcdc995081831c607883901c818117602885901c1691161798506108b2565b50636ed9eba19950602882901c607883901c83851c181898506108b2565b50635a8279999950602882901c82841c8118607884901c161898506108b2565b929a999197505077ffffffff00ffffffff00ffffffff00ffffffff00ffffffff929a979550604093500116950192906107bc565b806018918b01607f19810151606f19820151188482015160171983015118187ffffffffcfffffffcfffffffcfffffffcfffffffcfffffffcfffffffcfffffffc7c030000000300000003000000030000000300000003000000030000000382601e1c169160021b161790520161086f565b80600c918b018381015160371982015118601f19820151600b1983015118187ffffffffefffffffefffffffefffffffefffffffefffffffefffffffefffffffe7c010000000100000001000000010000000100000001000000010000000182601f1c169160011b1617905201610863565b8260031b848a015117848a0152610860565b6080908901533861084f565b60809150013861079c56fea2646970667358221220455e0711661ebb3330d06c7146aa5dd3c682599b9eaaf881e93e6bc31e4b705964736f6c63430008160033";

type SHA1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SHA1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SHA1__factory extends ContractFactory {
  constructor(...args: SHA1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SHA1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SHA1__factory {
    return super.connect(runner) as SHA1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SHA1Interface {
    return new Interface(_abi) as SHA1Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): SHA1 {
    return new Contract(address, _abi, runner) as unknown as SHA1;
  }
}
