/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestMakeJSON,
  TestMakeJSONInterface,
} from "../../../contracts/test/TestMakeJSON";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum MakeJSON.ValueType",
            name: "t",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "k",
            type: "string",
          },
          {
            internalType: "string",
            name: "v",
            type: "string",
          },
        ],
        internalType: "struct MakeJSON.KeyValue[]",
        name: "items",
        type: "tuple[]",
      },
    ],
    name: "testFrom",
    outputs: [
      {
        internalType: "string",
        name: "out",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610c6f908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b6000803560e01c63a27a41c31461002b57600080fd5b346101da57602091826003193601126101d6576004359467ffffffffffffffff8087116101d257366023880112156101d2578660040135928184116101ce5760248460051b9481868b0101943686116101ca578067c33952e2d86da4fe8a610097930152898152610200565b6100b1895167719055a1261e7b6b8a820152898152610200565b6100cb895167fe70a525d85e38028a820152898152610200565b6100d9888a51970187610232565b8552888101928786015b858510610123576101158a8a6100f98b8b6103cb565b82519382859384528251928184809387015286860191016101dd565b601f01601f19168101030190f35b84358281116101c6578b016060908160231982360301126101c2578b51918201828110858211176101b0578c528481013560028110156101ac57825260448101358481116101ac5761017a90863691840101610254565b8b83015260648101358481116101ac579161019d8c949287869536920101610254565b8d8201528152019401936100e3565b8a80fd5b634e487b7160e01b8b5260418752858bfd5b8980fd5b8880fd5b8780fd5b8480fd5b8380fd5b5080fd5b80fd5b60005b8381106101f05750506000910152565b81810151838201526020016101e0565b6040810190811067ffffffffffffffff82111761021c57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761021c57604052565b81601f820112156102ab5780359067ffffffffffffffff821161021c5760405192610289601f8401601f191660200185610232565b828452602083830101116102ab57816000926020809301838601378301015290565b600080fd5b80518210156102c45760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b6000198101919082116102e957565b634e487b7160e01b600052601160045260246000fd5b90600182018092116102e957565b6040519061031a82610200565b60018252607d60f81b6020830152565b6002111561033457565b634e487b7160e01b600052602160045260246000fd5b9061035d602092828151948592016101dd565b0190565b6040516020810190637472756560e01b82526004815261038081610200565b51902090565b60405162461bcd60e51b815260206004820152601b60248201527f4d616b654a534f4e2e56616c7565547970652e756e6b6e6f776e2100000000006044820152606490fd5b6040918251926020926103ff856103f086820190670ac094dffdb5743d602083019252565b03601f19968782018152610232565b61042982518061041d8782019067b0959314e957b167602083019252565b03908782018152610232565b61044782518061041d878201906786999328c5be7efe602083019252565b61045183826102b0565b519061047d8351806104718882019067012fb3780c25e1a5602083019252565b03908882018152610232565b61049b83518061047188820190672477fe4567d566ac602083019252565b6104b9835180610471888201906761d79ee2b74ceed4602083019252565b6104d783518061047188820190679969f5c0dc9975ad602083019252565b6104e181516102da565b8403610be4575061050682518061041d8782019067881c538d14178bd7602083019252565b61052482518061041d8782019067377ea181e7827cde602083019252565b61052c61030d565b925b61054c835180610471888201906794fb879129284a63602083019252565b61056a83518061047188820190670d4aaa1dfc4a9cc7602083019252565b81516105758161032a565b61057e8161032a565b610743576105a08351806104718882019067164dd3357ed346a1602083019252565b6105be83518061047188820190671758e4d271120924602083019252565b6105dc835180610471888201906730ef1e68117ff6ac602083019252565b6106b05761067f949261067f6106948461067f6106856106a1966106246106ad9b9951806106188c82019067b43ab808a11ae738602083019252565b03908c82018152610232565b6106428451806106188c82019067d69741c4af01cb22602083019252565b6106608451806106188c82019067afc23f8a0c0732a5602083019252565b80890151908401519351613d9160f11b998101998a529b8c9960020190565b9061034a565b62111d1160e91b815260030190565b601160f91b815260010190565b03908101835282610232565b90565b61067f949261067f6106948461067f6106856106a1966106e86106ad9b9951806106188c82019067d504c32ad3267c7a602083019252565b6107068451806106188c820190674e9b05ff807068fd602083019252565b6107248451806106188c82019067095a117b60971465602083019252565b8089015190840151935161161160f11b998101998a529b8c9960020190565b610761835180610471888201906724b8a7db81302b43602083019252565b61077f835180610471888201906765b3f3c33fc6e52f602083019252565b6001825161078c8161032a565b6107958161032a565b03610b4d576107b883518061047188820190677657fb35b000a4ee602083019252565b6107d683518061047188820190674135e6cef7d49495602083019252565b6107f4835180610471888201906761215dc209ada7f5602083019252565b8282015183516108178161080b898201809561034a565b03898101835282610232565b519020610822610361565b149061084e8451806108428982019067e395a1fcee525cae602083019252565b03908982018152610232565b61086c8451806108428982019067e2085bcf56f9c8b8602083019252565b6109f75761088e8351806104718882019067107a88c236fec125602083019252565b6108ac835180610471888201906776a52d2acc6c98d9602083019252565b6108ca83518061047188820190672498f6ae03b7b220602083019252565b156109755761067f949261067f61096384876106a19561090e6106ad9a98518061090285820190679fe705092b8dff18602083019252565b03908b82018152610232565b61092c8351806109028582019067b078930a4044d1da602083019252565b61094a835180610902858201906719ec8a9d562dd617602083019252565b01519051613d9160f11b96810196875298899660020190565b65223a7472756560d01b815260060190565b61067f949261067f6109e484876106a1956109a86106ad9a9851806109028582019067fb9453f1d9c92f69602083019252565b6109c6835180610902858201906748b6ec173e71c8f3602083019252565b61094a8351806109028582019067d5c7d70dcd243a3f602083019252565b66223a66616c736560c81b815260070190565b610a158351806104718882019067fba1195ca44a9243602083019252565b610a338351806104718882019067a511d1616044c520602083019252565b610a5183518061047188820190678079c5d8f25055ab602083019252565b15610ade5761067f949261067f61096384876106a195610a896106ad9a98518061090285820190675eb7c4cf72cbd7db602083019252565b610aa78351806109028582019067f2b59a34281afd24602083019252565b610ac58351806109028582019067fd729f3814edda35602083019252565b0151905161161160f11b96810196875298899660020190565b61067f949261067f6109e484876106a195610b116106ad9a985180610902858201906738dd01f83ffa8361602083019252565b610b2f83518061090285820190673be414211f4bbc36602083019252565b610ac58351806109028582019067b9140b3bc52ef681602083019252565b610bdf86610bd48786610b80815180610b7485820190677a1bb9e09fcb6dba602083019252565b03908682018152610232565b610b9e815180610b74858201906716d2c324cba036ea602083019252565b610bbc815180610b748582019067fd177bf2c884c390602083019252565b5191829182019067a7671592477ea550602083019252565b039182018152610232565b610386565b610c3390610c068451806108428982019067333efe5b5816c052602083019252565b610c24845180610842898201906758bb14904ed69fec602083019252565b610c2d856102ff565b906103cb565b9261052e56fea2646970667358221220f9a071a6f1ebb5a449b8294d7cc25182c7ed6b95c7873cffe57235a69e1ba61f64736f6c63430008160033";

type TestMakeJSONConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestMakeJSONConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestMakeJSON__factory extends ContractFactory {
  constructor(...args: TestMakeJSONConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestMakeJSON & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestMakeJSON__factory {
    return super.connect(runner) as TestMakeJSON__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestMakeJSONInterface {
    return new Interface(_abi) as TestMakeJSONInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestMakeJSON {
    return new Contract(address, _abi, runner) as unknown as TestMakeJSON;
  }
}
