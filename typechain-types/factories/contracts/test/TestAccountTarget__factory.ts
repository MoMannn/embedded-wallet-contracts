/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestAccountTarget,
  TestAccountTargetInterface,
} from "../../../contracts/test/TestAccountTarget";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ExampleEvent",
    type: "event",
  },
  {
    inputs: [],
    name: "example",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exampleView",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034610053576782eaaa12290cd96b6020820152602081526040810190811060018060401b0382111761003d57806040526101ae90816100598239f35b634e487b7160e01b600052604160045260246000fd5b600080fdfe60806040818152600436101561001457600080fd5b600091823560e01c908163447ee87e146100d057506354353f2f1461003857600080fd5b346100cc57816003193601126100cc57806100bb7f89a7ba390f3f5aa14e735b492833cbefeb32cd82f9adef04f543cf6138612881925161008a602091675cb9a47f9efd7d8483820152828152610146565b6100a48351677217f7d823ab4ea783820152828152610146565b825190671bb43a3353945148818301528152610146565b51338152306020820152604090a180f35b5080fd5b90508234610143578060031936011261014357506101349061010360209167fc5c021c88b0088083820152828152610146565b61011d8351676fde6a9a4a21974883820152828152610146565b82519067ec9579bb8f088f6d818301528152610146565b51338152306020820152604090f35b80fd5b6040810190811067ffffffffffffffff82111761016257604052565b634e487b7160e01b600052604160045260246000fdfea264697066735822122026616294f04d433dfb17ca8f42b573bd001aee93744835a88a9da57f693fe9e464736f6c63430008160033";

type TestAccountTargetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestAccountTargetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestAccountTarget__factory extends ContractFactory {
  constructor(...args: TestAccountTargetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestAccountTarget & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestAccountTarget__factory {
    return super.connect(runner) as TestAccountTarget__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestAccountTargetInterface {
    return new Interface(_abi) as TestAccountTargetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestAccountTarget {
    return new Contract(address, _abi, runner) as unknown as TestAccountTarget;
  }
}
