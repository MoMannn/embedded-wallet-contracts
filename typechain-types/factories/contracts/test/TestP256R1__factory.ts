/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestP256R1,
  TestP256R1Interface,
} from "../../../contracts/test/TestP256R1";

const _abi = [
  {
    inputs: [],
    name: "DER_Split_Error",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y2",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "uint256",
        name: "x3",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y3",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "double",
    outputs: [
      {
        internalType: "uint256",
        name: "x2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y2",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "secret",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    name: "ecdsa_sign_raw",
    outputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "secret",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
    ],
    name: "ecdsa_sign_raw_precompile",
    outputs: [
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "pubkey",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
    ],
    name: "ecdsa_test_encode",
    outputs: [
      {
        internalType: "bytes",
        name: "pkb",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "x",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "y",
            type: "uint256",
          },
        ],
        internalType: "struct Point256",
        name: "pubkey",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
    ],
    name: "ecdsa_verify_raw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "pubkey",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "z",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "r",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
    ],
    name: "ecdsa_verify_raw_precompile",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "pkb",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "z",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "sig",
        type: "bytes",
      },
    ],
    name: "ecdsa_verify_raw_precompile_raw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "isOnCurve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "s",
        type: "uint256",
      },
    ],
    name: "multiply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657611f09908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c9081630b0dbcfa146100ba57508063154b72bf146100b55780631b1baf1c146100b057806355dcf504146100ab5780635975c35a146100a657806382f46c0a146100a1578063b3a9b5f61461009c578063d89adb1d14610097578063e022d77c146100925763f37e21651461008d57600080fd5b610968565b610940565b610672565b610635565b6105dd565b610502565b610424565b610330565b610260565b3461015d57604036600319011261015d57630586de7d60e11b608090815260043560845260243560a45260209060448173__$48c1d2fad93a6f4bc06b9bb3a587c0c12c$__5af4908115610151579061011f575b6040519015158152602090f35b0390f35b5060203d60201161014a575b6101438161013b61011b93610176565b6080016109b7565b905061010e565b503d61012b565b604051903d90823e3d90fd5b80fd5b634e487b7160e01b600052604160045260246000fd5b601f80199101166080016080811067ffffffffffffffff82111761019957604052565b610160565b6040810190811067ffffffffffffffff82111761019957604052565b6060810190811067ffffffffffffffff82111761019957604052565b90601f8019910116810190811067ffffffffffffffff82111761019957604052565b67ffffffffffffffff811161019957601f01601f191660200190565b81601f8201121561025b5780359061022b826101f8565b9261023960405194856101d6565b8284526020838301011161025b57816000926020809301838601378301015290565b600080fd5b3461025b57606036600319011261025b5767ffffffffffffffff60043581811161025b57610292903690600401610214565b9060443590811161025b5760008061011b936102b561031e943690600401610214565b6102f26040516024356020820152602081526102d08161019e565b6102e46040519384926020840196876109ea565b03601f1981018352826101d6565b51906007600160981b015afa61030f610309610a39565b91610a69565b602080825183010191016109d2565b60405190151581529081906020820190565b3461025b5760408060031936011261025b5760043590602435600091825b60015b15610389575b6000938251610380816102e46020820194888b8791606093918352602083015260408201520190565b51902093610351565b8315801561040c575b6103575793919290926103a482610d39565b5093600080516020611eb4833981519152809506948515610401576103c884610d49565b966103fc576000968180878909850890099586156103f0576040805187815260208101899052f35b9193955091935061034e565b610aa6565b50919350919361034e565b50600080516020611eb4833981519152841015610392565b3461025b5760408060031936011261025b5761043e610abc565b50805161011b6104e660008085602095600435878201528681526104618161019e565b6104c48783516024358282015281815261047a8161019e565b856104ae61049b87519660808689019960078b5289015260a08801906105b8565b601f1993848883030160608901526105b8565b85810392830160808701525280845201826101d6565b51906006600160981b015afa6104e16104db610a39565b91610aec565b610ee3565b8051920151925191825260208201929092529081906040820190565b3461025b57366003190160a0811261025b5760401361025b57602061054960405161052c8161019e565b600435815260243583820152608435906064359060443590610b27565b6040519015158152f35b806023121561025b57604051906105698261019e565b8160449160441161025b576004905b8282106105855750505090565b8135815260209182019101610578565b60005b8381106105a85750506000910152565b8181015183820152602001610598565b906020916105d181518092818552858086019101610595565b601f01601f1916010190565b3461025b57608036600319011261025b576106276106026105fd36610553565b610c22565b61011b610613606435604435610c92565b6040519384936040855260408501906105b8565b9083820360208501526105b8565b3461025b57606036600319011261025b5761066061065a604435602435600435611335565b91611b58565b60408051928352602083019190915290f35b3461025b57604036600319011261025b57610660600160601b63ffffffff60c01b0319600160043509600160601b63ffffffff60c01b031960016024350990600160601b63ffffffff60c01b0319806024358009600160601b63ffffffff60c01b031984800809600160601b63ffffffff60c01b0319908008600160601b63ffffffff60c01b031990800891600160601b63ffffffff60c01b031980808080868008600080516020611e9483398151915209600160601b63ffffffff60c01b0319806003816004358009086003600160601b0363ffffffff60c01b03190908600160601b63ffffffff60c01b03196003600160601b0363ffffffff60c01b031981806004358009600160601b63ffffffff60c01b0319806004358009600160601b63ffffffff60c01b0319600435800908080809600160601b63ffffffff60c01b03198080600080516020611e9483398151915281808980086003600160601b0363ffffffff60c01b03190908600160601b63ffffffff60c01b0319602435800908600160601b63ffffffff60c01b031980600080516020611e9483398151915281808a80086003600160601b0363ffffffff60c01b03190908600160601b63ffffffff60c01b031990810390602435800908090891600160601b63ffffffff60c01b0319918290818080858008600080516020611e9483398151915209600160601b63ffffffff60c01b0319806003816004358009086003600160601b0363ffffffff60c01b0319090890600160601b63ffffffff60c01b031990800809600160601b63ffffffff60c01b03199081039181908190600080516020611e94833981519152908290819080086003600160601b0363ffffffff60c01b03190908600160601b63ffffffff60c01b031990810390602435800908600160601b63ffffffff60c01b03198060243560043509600160601b63ffffffff60c01b031960243560043509080908611b58565b3461025b57608036600319011261025b5761066061065a6064356044356024356004356113d6565b3461025b5760a036600319011261025b5761011b61031e60008061098e6105fd36610553565b61099c608435606435610c92565b6102f26040516044356020820152602081526102d08161019e565b602090607f19011261025b57608051801515810361025b5790565b9081602091031261025b5751801515810361025b5790565b610a1a610a369493610a0c6020946007855260a08686015260a08501906105b8565b9083820360408501526105b8565b90608083828403806060850152600085520191015201906105b8565b90565b3d15610a64573d90610a4a826101f8565b91610a5860405193846101d6565b82523d6000602084013e565b606090565b15610a7057565b60405162461bcd60e51b815260206004820152600e60248201526d1d995c9a599e4e8819985a5b195960921b6044820152606490fd5b634e487b7160e01b600052601260045260246000fd5b604051906060820182811067ffffffffffffffff8211176101995760405260006040838281528260208201520152565b15610af357565b60405162461bcd60e51b815260206004820152600c60248201526b1cda59db8e8819985a5b195960a21b6044820152606490fd5b9091928151610b43610b3f60208501928351906110d6565b1590565b610bd257841580610bf4575b610bd257811580610bdc575b610bd257610ba393610bad93610b7361065a94610d49565b958693610b92600080516020611eb4833981519152809981960961118b565b969195909451918b09915190611335565b94919290936116ab565b8115908115610bc9575b50610bc157061490565b505050600090565b90501538610bb7565b5050505050600090565b50600080516020611eb4833981519152821015610b5b565b50600080516020611eb4833981519152851015610b4f565b634e487b7160e01b600052603260045260246000fd5b6020810151600116610c58576002905b516040519160ff60f81b9060f81b166020830152602182015260218152610a36816101ba565b600390610c32565b60029291600360fc1b825260ff60f81b9060f81b166001820152610c8d8251809360208685019101610595565b010190565b6024610ca9610ca3610d1993611bcd565b93611bcd565b92805193805191604051958693600160f91b9283602087015260ff60f81b809360f81b166021870152610ce681518092602060228a019101610595565b850192602284015260f81b166023820152610d0a8251809360208785019101610595565b010360048101845201826101d6565b610a36610d27825160ff1690565b6102e460405193849260208401610c60565b61065a610d4591611266565b9091565b9060405191602090818452818085015281604085015260608401527fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63254f6080840152600080516020611eb483398151915260a0840152808360c08160055afa92519215610db25750565b6064906040519062461bcd60e51b8252600482015260126024820152715345435032353652312e696e76657273652160701b6044820152fd5b805115610df85760200190565b610c0c565b805160021015610df85760220190565b805160011015610df85760210190565b805160031015610df85760230190565b805160041015610df85760240190565b908151811015610df8570160200190565b634e487b7160e01b600052601160045260246000fd5b6004019081600411610e7257565b610e4e565b9060018201809211610e7257565b9060048201809211610e7257565b9060028201809211610e7257565b91908201809211610e7257565b600019810191908211610e7257565b6020039060208211610e7257565b600381901b91906001600160fd1b03811603610e7257565b90610eec610abc565b91600881511061109e576001600160f81b0319600360fc1b81610f1f610f1185610deb565b516001600160f81b03191690565b160361109e57600160f91b8082610f38610f1186610dfd565b160361109e57610f5c610f56610f50610f1186610e0d565b60f81c90565b60ff1690565b91610f6f610f56610f50610f1187610e1d565b926021841161109e57610f8184610e64565b90610f9d610f56610f50610f11610f9786610e77565b8a610e3d565b936021851161109e57610fc3610fb6610f11858a610e3d565b6001600160f81b03191690565b0361109e5780610fdb610fd68688610ea1565b610e85565b0361109e57610feb865191610e93565b0361109e57610ff990610e93565b90600490602185146110b0575b6021841461106b575b50906020809286010151940101519160208110611054575b506020811061103c575b509083526020830152565b61104861104d91610ebd565b610ecb565b1c38611031565b61104861106391949294610ebd565b1c9138611027565b61107b610f118488969496610e3d565b1661109e57602061109561108f8294610e77565b92610eae565b9391925061100f565b6040516386cd05c560e01b8152600490fd5b809491506110c0610f1187610e2d565b1661109e576110d0600591610eae565b93611006565b80158015611173575b801561116b575b8015611153575b61114c57600160601b63ffffffff60c01b03199081907f5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b90829081806003600160601b0363ffffffff60c01b0319830991818180090908089180091490565b5050600090565b50600160601b63ffffffff60c01b03198210156110ed565b5081156110e6565b50600160601b63ffffffff60c01b03198110156110df565b600080516020611eb48339815191529006801561125a5760018082167f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296818102947f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f592830294909290841c9160009185915b60ff841061120c575050505050565b9161121e916001939998959799611c0b565b929091946112308a828b87878b6116ab565b909b9192848b169b8c8603948d02908502019c8c02908402019a0291020196811c930192936111fd565b50600090600090600190565b600080516020611eb48339815191529006801561125a5760018082167f6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296818102947f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f592830294909290841c9160009185915b60ff84106112e7575050505050565b916112f9916001939998959799611c0b565b9290919461130b8a828b87878b6116ab565b909b9192848b169b8c8603948d02908502019c8c02908402019a0291020196811c930192936112d8565b91600080516020611eb483398151915290939193069081156113c9578284906001946001851680910296029460019460011c926000925b60ff841061137b575050505050565b9161138d916001939998959799611c0b565b9290919461139f8a828b87878b6116ab565b909b9192848b169b8c8603948d02908502019c8c02908402019a0291020196811c9301929361136c565b6000935083925060019150565b92909391938315806116a3575b61169b57841580611693575b61168957600160601b63ffffffff60c01b03198060018188880908600160601b63ffffffff60c01b0319908103908060018908600160601b63ffffffff60c01b031960018908090890600160601b63ffffffff60c01b03198060018186850908600160601b63ffffffff60c01b0319908103908060018708600160601b63ffffffff60c01b03196001860809086003600160601b0363ffffffff60c01b031995909190600080516020611e9483398151915290600160601b63ffffffff60c01b031980868a09830897600160601b63ffffffff60c01b0319898103818987090898600160601b63ffffffff60c01b031990818987090895600160601b63ffffffff60c01b031982818d8181880990600160601b63ffffffff60c01b03199081818a0990600160601b63ffffffff60c01b0319908a0908080893600163ffffffff60601b0360601b1992600163ffffffff60601b0360601b19908d6003600163ffffffff60601b0360601b1991600163ffffffff60601b0360601b1990890908900991600160601b63ffffffff60c01b0319910908600160601b63ffffffff60c01b031980828509600160601b63ffffffff60c01b0319888c090898600160601b63ffffffff60c01b03199182908709600160601b63ffffffff60c01b031990810391818d81808d8b09600160601b63ffffffff60c01b0319838a0908600160601b63ffffffff60c01b03199081039181908e9008600160601b63ffffffff60c01b03198b8a080908090898600160601b63ffffffff60c01b031996879485938480848409600160601b63ffffffff60c01b031986840908600160601b63ffffffff60c01b031990810394909384910891600160601b63ffffffff60c01b0319910809080991600160601b63ffffffff60c01b031991090890565b9293506001919050565b5081156113ef565b509150600190565b5080156113e3565b949190959395851580611b50575b611b4757831580611b3f575b611b3657600160601b63ffffffff60c01b03198080808080888809600160601b63ffffffff60c01b03198a8d0908600160601b63ffffffff60c01b03199081039080898b08600160601b63ffffffff60c01b0319898e0809086003600160601b0363ffffffff60c01b031909600160601b63ffffffff60c01b031980878709600080516020611e948339815191520908600160601b63ffffffff60c01b03198984090890600160601b63ffffffff60c01b0319808585096003600160601b0363ffffffff60c01b03190997600160601b63ffffffff60c01b0319898180898c09600160601b63ffffffff60c01b0319808b8e09600160601b63ffffffff60c01b03198c8f0908080898600160601b63ffffffff60c01b031990819081908103818a8d09086003600160601b0363ffffffff60c01b031909600160601b63ffffffff60c01b03198080808a8a09600160601b63ffffffff60c01b03198c8f0908600160601b63ffffffff60c01b0319908103908d818c8e0890600160601b63ffffffff60c01b0319908c90080908600080516020611e94833981519152090897600160601b63ffffffff60c01b0319808a8c09600160601b63ffffffff60c01b031986818080808e8e8e8380838309600160601b63ffffffff60c01b0319858f0908600160601b63ffffffff60c01b031990810393909283910890600160601b63ffffffff60c01b0319908d0809086003600160601b0363ffffffff60c01b031909600160601b63ffffffff60c01b0319808e8e09600080516020611e948339815191520908600160601b63ffffffff60c01b031990810390888a0908090898600160601b63ffffffff60c01b03199081908180808b8b09600160601b63ffffffff60c01b0319888a0908600160601b63ffffffff60c01b031990810390808c8908600160601b63ffffffff60c01b03198c8b08090809600160601b63ffffffff60c01b031990810390808080808d8d8d8380838309600160601b63ffffffff60c01b0319858e0908600160601b63ffffffff60c01b031990810393909283910890600160601b63ffffffff60c01b0319908c0809086003600160601b0363ffffffff60c01b031909600160601b63ffffffff60c01b0319808d8d09600080516020611e948339815191520908600160601b63ffffffff60c01b03199081039087890908600160601b63ffffffff60c01b03198080888a09600160601b63ffffffff60c01b03198e890908600160601b63ffffffff60c01b03199081039080898f08600160601b63ffffffff60c01b03198b8a080908090899600160601b63ffffffff60c01b031997889283918280878909600160601b63ffffffff60c01b031983850908600160601b63ffffffff60c01b0319908103929091829088900890600160601b63ffffffff60c01b03199089900809080994600160601b63ffffffff60c01b03199485938480848409600160601b63ffffffff60c01b031986840908600160601b63ffffffff60c01b031990810394909384910891600160601b63ffffffff60c01b031991080908090890565b94955092915050565b5086156116c5565b50509250929190565b5080156116b9565b9291909260405190602092838352838084015283604084015260608301527fffffffff00000001000000000000000000000000fffffffffffffffffffffffd6080830152600163ffffffff60601b0360601b19928360a0840152808360c08160055afa92519215610db2575081839109930990565b600160ff1b8116611bee5760405190602082015260208152610a368161019e565b6040519060006020830152602182015260218152610a36816101ba565b919290600160601b63ffffffff60c01b0319848409600080516020611e94833981519152906003600160601b0363ffffffff60c01b031990600160601b63ffffffff60c01b0319808080808580088709600160601b63ffffffff60c01b03198080808e80098909600160601b63ffffffff60c01b0319908103908d800908870908600160601b63ffffffff60c01b031980808c80098709600160601b63ffffffff60c01b0319808c8009600160601b63ffffffff60c01b03198d8181800990600160601b63ffffffff60c01b031990800908080809600160601b63ffffffff60c01b0319808080808d80098909600160601b63ffffffff60c01b031980888008890908600160601b63ffffffff60c01b031989800908600160601b63ffffffff60c01b03198080808e80098a09600160601b63ffffffff60c01b0319808980088a0908600160601b63ffffffff60c01b0319908103908a800908090895600160601b63ffffffff60c01b0319888609600160601b63ffffffff60c01b031990800897600160601b63ffffffff60c01b031994858080808780088409600160601b63ffffffff60c01b03198080808880098b09600160601b63ffffffff60c01b031990810390898009088909088b09600160601b63ffffffff60c01b031990810395909485938493849182908009900991600160601b63ffffffff60c01b03199182908008900908600160601b63ffffffff60c01b0319908103908780090890600160601b63ffffffff60c01b0319908187820990600160601b63ffffffff60c01b03199088900908090893600160601b63ffffffff60c01b031991829080099009600160601b63ffffffff60c01b0319908008600160601b63ffffffff60c01b03199080089056fe1052a18afeafbbb61bc3380063c994352f57141164fb12e2b36ab4ba777720e2ffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551a26469706673582212206de080289f7ca2bf7336ab12af9b533cab20ace6eee77e0a705d43b8d244326064736f6c63430008160033";

type TestP256R1ConstructorParams =
  | [linkLibraryAddresses: TestP256R1LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestP256R1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TestP256R1__factory extends ContractFactory {
  constructor(...args: TestP256R1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TestP256R1__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TestP256R1LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$48c1d2fad93a6f4bc06b9bb3a587c0c12c\\$__", "g"),
      linkLibraryAddresses["contracts/lib/SECP256R1.sol:SECP256R1"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestP256R1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestP256R1__factory {
    return super.connect(runner) as TestP256R1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestP256R1Interface {
    return new Interface(_abi) as TestP256R1Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestP256R1 {
    return new Contract(address, _abi, runner) as unknown as TestP256R1;
  }
}

export interface TestP256R1LibraryAddresses {
  ["contracts/lib/SECP256R1.sol:SECP256R1"]: string;
}
