/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TestOTPSHA1,
  TestOTPSHA1Interface,
} from "../../../../contracts/test/TestOTP.sol/TestOTPSHA1";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "HMAC",
    outputs: [
      {
        internalType: "bytes20",
        name: "",
        type: "bytes20",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "K",
        type: "bytes",
      },
      {
        internalType: "uint64",
        name: "C",
        type: "uint64",
      },
    ],
    name: "HOTP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "uint32",
        name: "time_step",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "when",
        type: "uint32",
      },
    ],
    name: "TOTP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761073d908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600090813560e01c806343501d60146102a45780636cd87a9c146101715763e5373c951461004257600080fd5b3461016d57606036600319011261016d57823567ffffffffffffffff8111610169576100719036908501610395565b60243563ffffffff9081811680910361016557604435828116809103610161578451956100af60209767ccbdc714e167fa3c89820152888152610341565b6100c98651672a0dbcfa1d4482ef89820152888152610341565b6100e38651676b993fac65306e2d89820152888152610341565b6100fd8651671da7639dafb6016489820152888152610341565b610117865167018456abf454433389820152888152610341565b610131865167ddfd8b9643904cc589820152888152610341565b821561014e57506101479495965004169061047e565b9051908152f35b634e487b7160e01b815260128852602490fd5b8580fd5b8480fd5b8280fd5b5080fd5b503461016d578060031936011261016d5767ffffffffffffffff9280358481116102a0576101a29036908301610395565b906024359485116102a0576101bd6101db9536908301610395565b9183519160209683676b315d41d4b863b58980960152848152610341565b6101f58551676a794d18ef95640f85820152848152610341565b61020f855167e802cca2fb56b1c385820152848152610341565b61022a85519485938493631b361ea760e21b85528401610456565b038173__$ba42c96900d8eed96ce1f77a0c40a3a79f$__5af49283156102955792610266575b5051906bffffffffffffffffffffffff19168152f35b610287919250833d851161028e575b61027f8183610373565b8101906103f1565b9038610250565b503d610275565b8251903d90823e3d90fd5b8380fd5b508234610169578160031936011261016957803567ffffffffffffffff91828211610165576102d591369101610395565b92602435918216820361033e57506101479082519361030560209567bf942c219227f75e87820152868152610341565b61031f845167977c3d0fe700945e87820152868152610341565b610339845167b2fdc0132c4e7ec187820152868152610341565b61047e565b80fd5b6040810190811067ffffffffffffffff82111761035d57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761035d57604052565b81601f820112156103ec5780359067ffffffffffffffff821161035d57604051926103ca601f8401601f191660200185610373565b828452602083830101116103ec57816000926020809301838601378301015290565b600080fd5b908160209103126103ec57516bffffffffffffffffffffffff19811681036103ec5790565b919082519283825260005b848110610442575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610421565b909161046d61047b93604084526040840190610416565b916020818403910152610416565b90565b61051992916104a791604091825190602094826757941038e59a41288780950152838152610341565b6104c184516757cd6a4a12b9fdaf84820152838152610341565b6104db845167259fa6b2bb963e4384820152838152610341565b835160c09190911b6001600160c01b03191682820152600881526104fe81610341565b835180978192631b361ea760e21b8352600495868401610456565b038173__$ba42c96900d8eed96ce1f77a0c40a3a79f$__5af49485156106fc576000956106dd575b5061055c825167de578d3e02557e9185820152848152610341565b6105768251672018a4456a899a6a85820152848152610341565b600f8560131a1690610598835167db8697ade056bcd586820152858152610341565b6105b28351670df62913ac0eaf4286820152858152610341565b601482101561065f5760ff93600183018581116106c85785169360148510156106b3576002840186811161069e5786169560148710156106895760038501818111610674571692601484101561065f5750968080637f0000009461064782958c610631620f42409d9e5167ecb065700b3e590984820152838152610341565b519067c5b8692c25824fb7818301528152610341565b1a961a60081b941a60101b921a60181b161717170690565b603290634e487b7160e01b6000525260246000fd5b601185634e487b7160e01b6000525260246000fd5b603284634e487b7160e01b6000525260246000fd5b601184634e487b7160e01b6000525260246000fd5b603283634e487b7160e01b6000525260246000fd5b601183634e487b7160e01b6000525260246000fd5b6106f5919550833d851161028e5761027f8183610373565b9338610541565b82513d6000823e3d90fdfea2646970667358221220cf4ae1182e2f3e3e20862391e0ca2d31f676b063cc3d59afb33f3915fa41ab8464736f6c63430008160033";

type TestOTPSHA1ConstructorParams =
  | [linkLibraryAddresses: TestOTPSHA1LibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestOTPSHA1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class TestOTPSHA1__factory extends ContractFactory {
  constructor(...args: TestOTPSHA1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        TestOTPSHA1__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: TestOTPSHA1LibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$ba42c96900d8eed96ce1f77a0c40a3a79f\\$__", "g"),
      linkLibraryAddresses["contracts/lib/SHA1.sol:SHA1"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestOTPSHA1 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestOTPSHA1__factory {
    return super.connect(runner) as TestOTPSHA1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestOTPSHA1Interface {
    return new Interface(_abi) as TestOTPSHA1Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestOTPSHA1 {
    return new Contract(address, _abi, runner) as unknown as TestOTPSHA1;
  }
}

export interface TestOTPSHA1LibraryAddresses {
  ["contracts/lib/SHA1.sol:SHA1"]: string;
}
